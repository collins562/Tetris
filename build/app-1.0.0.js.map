{"version":3,"sources":["webpack:///app-1.0.0.js","webpack:///webpack/bootstrap f91f4998d57626976484","webpack:///./src/js/main.js","webpack:///./src/js/game/game.js","webpack:///./src/js/game/drawing_board.js","webpack:///./src/js/controller/event_controller.js","webpack:///./src/js/utils/event_util.js","webpack:///./src/js/const.js","webpack:///./src/js/utils/function.js","webpack:///./src/js/component/clock.js","webpack:///./src/js/game/game_indicator.js","webpack:///./src/js/game/game_board.js","webpack:///./src/js/component/pause_sign.js","webpack:///./src/js/storage/score_storage.js","webpack:///./src/js/game/game_area.js","webpack:///./src/js/scene/reset/index.js","webpack:///./src/js/game/game_scene.js","webpack:///./src/js/scene/title/index.js","webpack:///./src/js/scene/main/index.js","webpack:///./src/js/scene/main/blockcomb.js","webpack:///./src/js/scene/main/preview.js","webpack:///./src/js/controller/action_controller.js","webpack:///./src/js/view/game_interface.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_game","_game2","_game_interface","_game_interface2","_function","_index","window","onload","isMobile","options","passive","document","body","style","fontSize","documentElement","addEventListener","event","preventDefault","lastTouchEnd","now","Date","gi","instance","resize","onresize","game","run","_classCallCheck","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_drawing_board","_drawing_board2","_event_controller","_event_controller2","_clock","_clock2","_pause_sign","_pause_sign2","_score_storage","_score_storage2","_game_board","_game_board2","_game_area","_game_area2","_reset","_reset2","Game","_DrawingBoard","callback","this","_this","blockSize","canvas","width","process","callbackRun","getComponents","setupEventController","__start","fps","clock","storage","scoreBoard","new","lineCountBoard","levelBoard","pauseSign","area","init","eventCtrler","keyCode","setPauseKeyCode","paused","pause","unpause","controller","registerController","removeAllCallbacks","str","setTitle","getNumber","num","setNumber","Scene","name","sceneName","scene","x","y","color","draw","update","_this2","setTimeout","runloop","_this3","replaceScene","DrawingBoard","selectors","querySelector","ctx","getContext","bs","gap","space","fillStyle","offsetX","offsetY","fillRect","clearRect","_len","arguments","args","Array","_key","bind","apply","concat","_event_util","_event_util2","_const","EventController","_EventUtil","pauseKeyCode","keyBinds","processSettings","setup","down","kc","actived","up","buttons","addKBHandler","btnDownState","btnUpState","ism","start","out","end","addMouseHandler","k","keycode","toString","settings","binds","_settings$key","sel","component","sceneControllers","sctrls","element","type","state","addHandler","keyboardHandler","isPaused","cpn","ctrl","className","_this4","mouseHandler","tgt","getTarget","EventUtil","srcElement","returnValue","stopPropagation","cancelBubble","handler","attachEvent","removeEventListener","detachEvent","blockType","clearPoints","speeds","delays","linesForEachLevel","blockScoreIncrement","generateBlockProb","maxStartLines","keySettings","rotate","speedUp","left","right","drop","reset","pauseState","unpauseState","tikState","tokState","defaultColor","occupiedColor","indicateColor","_toConsumableArray","arr","isArray","arr2","from","collide","coors","column","map","coorY","board","occupied","reduce","prev","cond","coorDiff","index","array","Math","max","min","coorCompare","coor1","coor2","ua","navigator","userAgent","android","test","iphone","indexOf","ipod","ipad","nokiaN","_game_indicator","_game_indicator2","Clock","hourBoard","minuteBoard","indicator","hours","getHours","minutes","getMinutes","seconds","getSeconds","setInterval","setState","GameIndicator","GameBoard","eltsSel","titleSel","numElts","querySelectorAll","titleCpn","innerText","lastChar","eltClass","n","sum","parseInt","isNaN","r","setDigit","digit","elt","PauseSign","_GameIndicator","count","clearInterval","_typeof","Symbol","iterator","keys","lastRecordKey","maxRecordKey","ScoreStorage","getLocalStorage","localStorage","globalStorage","location","host","console","warn","val","getRecord","setRecord","GameArea","scoring","row","fullLinesEchoSpeed","fullLinesEchoTimes","line","j","generateRandomRows","lineIndex","block","lastIndex","generateBlock","random","lineIsFull","floor","b","cur","func","scoreFunc","rows","drawBlock","lines","push","score","echoFullLines","clearFullLines","li","setLine","ls","forEach","deleted","splice","unshift","_game_scene","_game_scene2","_title","_title2","SceneReset","_GameScene","pushElement","fillArea","clearArea","restartGame","GameScene","elements","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","done","e","err","return","_main","_main2","_action_controller","_action_controller2","SceneTitle","title","showGap","scoreShowGap","titleType","startLevel","maxLevel","startLines","that","begin","interval","a","dropCode","registerAction","startGame","leftCode","updateLevel","rightCode","upCode","updateLines","downCode","setLevel","setLineBoardTitle","setLines","visibility","t","visible","sb","s","getMaxRecord","getLastRecord","level","_blockcomb","_blockcomb2","_index2","SceneMain","eachBlockScore","clearLines","bc","setUpScoreRule","countScore","moveLeft","moveRight","speedUpCode","clear","retired","updateCD","rotateCode","once","resetCode","resetGame","pauseCode","getLevel","presetLines","getLines","setPresetLines","setScoreBoardTitle","setScore","sprev","getScore","cprev","lineAmount","addScore","maxRecord","lastRecord","setMaxRecord","setLastRecord","occupy","_preview","_preview2","BlockComb","preview","maxUpdateCD","speed","delay","offset","round","move","newCoors","rotateCoors","xDiff","offsets","getOptionalOffsets","sort","c1","c2","updateY","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ex","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","isBlocked","retire","Preview","randBlockType","diffX","bt","height","events","ActionController","clearAll","loop","clearTimeout","GameInterface","root","button","curW","curH","aspectRatio","pageWidth","innerWidth","pageHeight","innerHeight","compatMode","clientWidth","clientHeight","g","getBrowserInterfaceSize","w","h","size","negSize","nextW","leftOffset","transform","marginLeft","marginTop","scale"],"mappings":"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","file":"app-1.0.0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _game = __webpack_require__(1);\n\t\n\tvar _game2 = _interopRequireDefault(_game);\n\t\n\tvar _game_interface = __webpack_require__(20);\n\t\n\tvar _game_interface2 = _interopRequireDefault(_game_interface);\n\t\n\tvar _function = __webpack_require__(6);\n\t\n\tvar _index = __webpack_require__(21);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.onload = function () {\n\t    // 判断是否是移动端\n\t    if ((0, _function.isMobile)()) {\n\t        var options = { passive: false };\n\t\n\t        document.body.style.fontSize = '12px';\n\t        // 禁止双指缩放 以及 阻止长按出现菜单\n\t        document.documentElement.addEventListener('touchstart', function (event) {\n\t            event.preventDefault();\n\t        }, options);\n\t\n\t        // 禁止双击缩放\n\t        var lastTouchEnd = 0;\n\t        document.documentElement.addEventListener('touchend', function (event) {\n\t            var now = Date.now();\n\t            if (now - lastTouchEnd <= 300) {\n\t                event.preventDefault();\n\t            }\n\t            lastTouchEnd = now;\n\t        }, options);\n\t\n\t        // 禁止滚动\n\t        document.documentElement.addEventListener('touchmove', function (event) {\n\t            event.preventDefault();\n\t        }, options);\n\t    }\n\t\n\t    // 调整界面\n\t    var gi = _game_interface2.default.instance();\n\t    gi.resize();\n\t    window.onresize = function () {\n\t        gi.resize();\n\t    };\n\t\n\t    // 开始游戏\n\t    var g = _game2.default.instance(function (game) {\n\t        game.run();\n\t    });\n\t};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _drawing_board = __webpack_require__(2);\n\t\n\tvar _drawing_board2 = _interopRequireDefault(_drawing_board);\n\t\n\tvar _event_controller = __webpack_require__(3);\n\t\n\tvar _event_controller2 = _interopRequireDefault(_event_controller);\n\t\n\tvar _clock = __webpack_require__(7);\n\t\n\tvar _clock2 = _interopRequireDefault(_clock);\n\t\n\tvar _pause_sign = __webpack_require__(10);\n\t\n\tvar _pause_sign2 = _interopRequireDefault(_pause_sign);\n\t\n\tvar _score_storage = __webpack_require__(11);\n\t\n\tvar _score_storage2 = _interopRequireDefault(_score_storage);\n\t\n\tvar _game_board = __webpack_require__(9);\n\t\n\tvar _game_board2 = _interopRequireDefault(_game_board);\n\t\n\tvar _game_area = __webpack_require__(12);\n\t\n\tvar _game_area2 = _interopRequireDefault(_game_area);\n\t\n\tvar _reset = __webpack_require__(13);\n\t\n\tvar _reset2 = _interopRequireDefault(_reset);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// 游戏主体\n\tvar Game = function (_DrawingBoard) {\n\t    _inherits(Game, _DrawingBoard);\n\t\n\t    function Game(callback) {\n\t        _classCallCheck(this, Game);\n\t\n\t        // 设置每个方块的大小\n\t        var _this = _possibleConstructorReturn(this, (Game.__proto__ || Object.getPrototypeOf(Game)).call(this, '#area'));\n\t        // 得到 id 为 area 的 canvas 作为画板\n\t\n\t\n\t        _this.blockSize = _this.canvas.width / 10;\n\t        // 用来记录 setInterval 返回的循环事件 id,方便取消     \n\t        _this.process = null;\n\t        // 游戏初始完成之后执行的回调\n\t        _this.callbackRun = callback;\n\t\n\t        _this.default();\n\t        _this.getComponents();\n\t        _this.setupEventController();\n\t        _this.__start();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Game, [{\n\t        key: 'default',\n\t        value: function _default() {\n\t            this.fps = 45;\n\t        }\n\t    }, {\n\t        key: 'getComponents',\n\t        value: function getComponents() {\n\t            this.clock = _clock2.default.instance();\n\t            this.storage = _score_storage2.default.instance();\n\t\n\t            // 分数板\n\t            this.scoreBoard = _game_board2.default.new('#point span', '#point p');\n\t            // 记录清除行数的面板\n\t            this.lineCountBoard = _game_board2.default.new('#lines span', '#lines p');\n\t            // 记录当前级别的面板\n\t            this.levelBoard = _game_board2.default.new('#level span');\n\t            // 暂停标志\n\t            this.pauseSign = _pause_sign2.default.instance();\n\t\n\t            this.area = _game_area2.default.instance(this);\n\t            this.area.init();\n\t        }\n\t    }, {\n\t        key: 'setupEventController',\n\t        value: function setupEventController() {\n\t            this.eventCtrler = _event_controller2.default.instance(this);\n\t        }\n\t    }, {\n\t        key: 'setPauseKeyCode',\n\t        value: function setPauseKeyCode(keyCode) {\n\t            this.eventCtrler.setPauseKeyCode(keyCode);\n\t        }\n\t    }, {\n\t        key: 'isPaused',\n\t        value: function isPaused() {\n\t            return this.pauseSign.paused;\n\t        }\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            this.pauseSign.pause();\n\t        }\n\t    }, {\n\t        key: 'unpause',\n\t        value: function unpause() {\n\t            this.pauseSign.unpause();\n\t        }\n\t\n\t        // 注册相应键码的事件\n\t\n\t    }, {\n\t        key: 'registerAction',\n\t        value: function registerAction(keyCode, controller) {\n\t            this.eventCtrler.registerController(keyCode, controller);\n\t        }\n\t    }, {\n\t        key: 'removeAllActions',\n\t        value: function removeAllActions() {\n\t            this.eventCtrler.removeAllCallbacks();\n\t        }\n\t    }, {\n\t        key: 'setLineBoardTitle',\n\t        value: function setLineBoardTitle(str) {\n\t            this.lineCountBoard.setTitle(str);\n\t        }\n\t    }, {\n\t        key: 'setScoreBoardTitle',\n\t        value: function setScoreBoardTitle(str) {\n\t            this.scoreBoard.setTitle(str);\n\t        }\n\t    }, {\n\t        key: 'getLines',\n\t        value: function getLines() {\n\t            return this.lineCountBoard.getNumber();\n\t        }\n\t    }, {\n\t        key: 'setLines',\n\t        value: function setLines(num) {\n\t            this.lineCountBoard.setNumber(num);\n\t        }\n\t    }, {\n\t        key: 'getLevel',\n\t        value: function getLevel() {\n\t            return this.levelBoard.getNumber();\n\t        }\n\t    }, {\n\t        key: 'setLevel',\n\t        value: function setLevel(num) {\n\t            this.levelBoard.setNumber(num);\n\t        }\n\t    }, {\n\t        key: 'getScore',\n\t        value: function getScore() {\n\t            return this.scoreBoard.getNumber();\n\t        }\n\t    }, {\n\t        key: 'setScore',\n\t        value: function setScore(num) {\n\t            this.scoreBoard.setNumber(num);\n\t        }\n\t\n\t        // 游戏场景替换\n\t\n\t    }, {\n\t        key: 'replaceScene',\n\t        value: function replaceScene(Scene, name) {\n\t            // cancel the registered functions\n\t            // this.removeAllActions()\n\t            this.sceneName = name;\n\t            this.scene = Scene.instance(this);\n\t            // Scene.new will:\n\t            //      1st: create a singular instance at the first time or\n\t            //      2nd: just initialize the instance\n\t            this.eventCtrler.init();\n\t        }\n\t    }, {\n\t        key: 'drawBlock',\n\t        value: function drawBlock(x, y, color) {\n\t            _get(Game.prototype.__proto__ || Object.getPrototypeOf(Game.prototype), 'drawBlock', this).call(this, x, y, this.blockSize, color);\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            this.scene.draw();\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            this.scene.update();\n\t        }\n\t    }, {\n\t        key: 'runloop',\n\t        value: function runloop() {\n\t            var _this2 = this;\n\t\n\t            //this.clear()\n\t            this.draw();\n\t            this.update();\n\t            this.process = setTimeout(function () {\n\t                _this2.runloop();\n\t            }, 1000 / this.fps);\n\t        }\n\t    }, {\n\t        key: 'run',\n\t        value: function run() {\n\t            var _this3 = this;\n\t\n\t            this.process = setTimeout(function () {\n\t                _this3.runloop();\n\t            }, 1000 / this.fps);\n\t        }\n\t    }, {\n\t        key: '__start',\n\t        value: function __start() {\n\t            this.replaceScene(_reset2.default);\n\t            this.callbackRun(this);\n\t        }\n\t    }]);\n\t\n\t    return Game;\n\t}(_drawing_board2.default);\n\t\n\texports.default = Game;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 一个用于画出俄罗斯方块的画板(canvas)\n\tvar DrawingBoard = function () {\n\t    function DrawingBoard(selectors) {\n\t        _classCallCheck(this, DrawingBoard);\n\t\n\t        this.canvas = document.querySelector(selectors);\n\t        this.ctx = this.canvas.getContext('2d');\n\t    }\n\t\n\t    _createClass(DrawingBoard, [{\n\t        key: 'drawBlock',\n\t        value: function drawBlock(x, y, bs, color) {\n\t            var gap = bs / 15;\n\t            var space = bs / 10;\n\t            var ctx = this.ctx;\n\t\n\t            ctx.fillStyle = color;\n\t            // 画外框\n\t            var offsetX = bs * x + gap;\n\t            var offsetY = bs * y + gap;\n\t            var length = bs - 2 * gap;\n\t            ctx.fillRect(offsetX, offsetY, length, length);\n\t\n\t            // 请空间隔\n\t            offsetX += gap;\n\t            offsetY += gap;\n\t            length -= 2 * gap;\n\t            ctx.clearRect(offsetX, offsetY, length, length);\n\t\n\t            // 画正中间方块\n\t            length -= space * 2;\n\t            ctx.fillRect(offsetX + space, offsetY + space, length, length);\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return DrawingBoard;\n\t}();\n\t\n\texports.default = DrawingBoard;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _event_util = __webpack_require__(4);\n\t\n\tvar _event_util2 = _interopRequireDefault(_event_util);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tvar _function = __webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar EventController = function (_EventUtil) {\n\t    _inherits(EventController, _EventUtil);\n\t\n\t    function EventController(game) {\n\t        _classCallCheck(this, EventController);\n\t\n\t        var _this = _possibleConstructorReturn(this, (EventController.__proto__ || Object.getPrototypeOf(EventController)).call(this));\n\t\n\t        _this.game = game;\n\t        // pauseKeyCode : a special key to unauthorize the use of all the other keys\n\t        // 用于暂停所有事件的键码\n\t        _this.pauseKeyCode = null;\n\t        /* keyBinds     : will contain structure as follows 每个键码都会含有以下结构\r\n\t                {\r\n\t                    不同的场景会拥有不同的controller\r\n\t                    sceneControllers: {\r\n\t                        sceneName1 : controller1（ActionController实例）,\r\n\t                        sceneName2 : controller2,\r\n\t                        ...\r\n\t                    },\r\n\t                    component: 一个HTMLElement实例,\r\n\t                    actived: Boolean 表示component有没有被激活,用于防止多次触发,\r\n\t                }\r\n\t        */\n\t        _this.keyBinds = {};\n\t\n\t        // 处理设置好的 keySettings\n\t        _this.processSettings();\n\t        _this.setup();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(EventController, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            var _this2 = this;\n\t\n\t            // 通过 actived 确保按住键盘不放时，绑定的事件只会触发一次\n\t            var down = function down(kc, controller) {\n\t                if (!_this2.keyBinds[kc].actived) {\n\t                    controller.down();\n\t                    _this2.keyBinds[kc].actived = true;\n\t                }\n\t            };\n\t\n\t            // 释放按键时触发controller的up函数\n\t            var up = function up(kc, controller) {\n\t                _this2.keyBinds[kc].actived = false;\n\t                controller.up();\n\t            };\n\t\n\t            // 通过id为button的HTMLElement对所有按钮元素进行事件代理\n\t            var buttons = document.querySelector('#button');\n\t            this.addKBHandler(window, 'keydown', _const.btnDownState, down);\n\t            this.addKBHandler(window, 'keyup', _const.btnUpState, up);\n\t\n\t            var ism = (0, _function.isMobile)();\n\t            var start = ism ? 'touchstart' : 'mousedown';\n\t            var out = 'mouseout';\n\t            var end = ism ? 'touchend' : 'mouseup';\n\t            this.addMouseHandler(buttons, start, _const.btnDownState, down);\n\t            this.addMouseHandler(buttons, end, _const.btnUpState, up);\n\t            this.addMouseHandler(buttons, out, _const.btnUpState, up);\n\t            // 当用户没有在按钮里面结束鼠标事件时，是不会触发 mouseup 事件的\n\t            // 只有用 mouseout 才能保证按键能正常结束，恢复原来的按键状况\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            for (var k in this.keyBinds) {\n\t                if (this.keyBinds[k]) {\n\t                    this.keyBinds[k].actived = false;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'setPauseKeyCode',\n\t        value: function setPauseKeyCode(keycode) {\n\t            this.pauseKeyCode = keycode.toString();\n\t        }\n\t\n\t        // 处理设置好的 bindings 得到 keyCodes 对应的元素\n\t\n\t    }, {\n\t        key: 'processSettings',\n\t        value: function processSettings() {\n\t            var settings = _const.keySettings;\n\t            var binds = {};\n\t            for (var key in settings) {\n\t                var _settings$key = settings[key],\n\t                    keyCode = _settings$key.keyCode,\n\t                    sel = _settings$key.sel;\n\t\n\t                binds[keyCode] = {\n\t                    component: document.querySelector(sel),\n\t                    sceneControllers: {},\n\t                    actived: false\n\t                };\n\t            }\n\t            this.keyBinds = binds;\n\t        }\n\t\n\t        // 根据当前的 game.sceneName 来设置 controller (EventController 实例)\n\t\n\t    }, {\n\t        key: 'registerController',\n\t        value: function registerController(keyCode, controller) {\n\t            var binds = this.keyBinds[keyCode];\n\t            var sceneName = this.game.sceneName;\n\t\n\t            if (!binds) {\n\t                binds = this.keyBinds[keyCode] = {\n\t                    sceneControllers: {},\n\t                    actived: false\n\t                };\n\t            }\n\t            var sctrls = binds.sceneControllers;\n\t            sctrls[sceneName] = controller;\n\t        }\n\t\n\t        // 对 keybinds 里的对象添加键盘事件\n\t\n\t    }, {\n\t        key: 'addKBHandler',\n\t        value: function addKBHandler(element, type, state, callback) {\n\t            var _this3 = this;\n\t\n\t            var game = this.game;\n\t            this.addHandler(element, type, function (event) {\n\t                _this3.keyboardHandler(event, state, callback);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'keyboardHandler',\n\t        value: function keyboardHandler(event, state, callback) {\n\t            var kc = event.keyCode;\n\t            var game = this.game;\n\t            // 判断按下的键是否在绑定的键对中\n\t            if (kc in this.keyBinds) {\n\t                var bind = this.keyBinds[kc];\n\t                var paused = game.isPaused();\n\t                var cpn = bind.component;\n\t                var ctrl = bind.sceneControllers[game.sceneName]; // 得到当前场景对应的注册controller\n\t                if (cpn) {\n\t                    // 更新组件的状态\n\t                    cpn.className = state;\n\t                }\n\t                if (!(paused && kc != this.pauseKeyCode) && ctrl) {\n\t                    callback(kc, ctrl);\n\t                }\n\t            }\n\t        }\n\t\n\t        // 对 keybinds 里的对象添加鼠标事件\n\t\n\t    }, {\n\t        key: 'addMouseHandler',\n\t        value: function addMouseHandler(element, type, state, callback) {\n\t            var _this4 = this;\n\t\n\t            this.addHandler(window, type, function (event) {\n\t                _this4.mouseHandler(event, state, callback);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'mouseHandler',\n\t        value: function mouseHandler(event, state, callback) {\n\t            var tgt = this.getTarget(event);\n\t            var paused = this.game.isPaused();\n\t            // 遍历键值对，判断是否有相应的按钮被触发\n\t            for (var kc in this.keyBinds) {\n\t                var bind = this.keyBinds[kc];\n\t                var cpn = bind.component;\n\t                var ctrl = bind.sceneControllers[this.game.sceneName];\n\t                if (cpn !== tgt) {\n\t                    continue;\n\t                }\n\t\n\t                cpn.className = state;\n\t                if (!(paused && kc !== this.pauseKeyCode) && ctrl) {\n\t                    return callback(kc, ctrl);\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return EventController;\n\t}(_event_util2.default);\n\t\n\texports.default = EventController;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 《JS高级程序设计》中的源码\n\tvar EventUtil = function () {\n\t    function EventUtil() {\n\t        _classCallCheck(this, EventUtil);\n\t    }\n\t\n\t    _createClass(EventUtil, [{\n\t        key: 'getEvent',\n\t        value: function getEvent() {\n\t            return event ? event : window.event;\n\t        }\n\t    }, {\n\t        key: 'getTarget',\n\t        value: function getTarget(event) {\n\t            return event.target || event.srcElement;\n\t        }\n\t    }, {\n\t        key: 'preventDefault',\n\t        value: function preventDefault(event) {\n\t            if (event.preventDefault) {\n\t                event.preventDefault();\n\t            } else {\n\t                event.returnValue = false;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stopPropagation',\n\t        value: function stopPropagation(event) {\n\t            if (event.stopPropagation) {\n\t                event.stopPropagation();\n\t            } else {\n\t                event.cancelBubble = true;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addHandler',\n\t        value: function addHandler(element, type, handler) {\n\t            if (element.addEventListener) {\n\t                element.addEventListener(type, handler);\n\t            } else if (element.attachEvent) {\n\t                element.attachEvent('on' + type, handler);\n\t            } else {\n\t                element['on' + type] = handler;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'removeHandler',\n\t        value: function removeHandler(element, type, handler) {\n\t            if (element.removeEventListener) {\n\t                element.removeEventListener(type, handler);\n\t            } else if (element.detachEvent) {\n\t                element.detachEvent('on' + type, handler);\n\t            } else {\n\t                element['on' + type] = handler;\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return EventUtil;\n\t}();\n\t\n\texports.default = EventUtil;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// 方块组合的类型\n\tvar blockType = [[[0, 0], [1, 0], [2, 0], [3, 0]], [[0, 0], [0, 1], [1, 0], [1, 1]], [[0, 1], [1, 0], [1, 1], [2, 1]], [[0, 0], [0, 1], [1, 1], [2, 1]], [[0, 1], [1, 1], [2, 0], [2, 1]], [[0, 0], [1, 0], [1, 1], [2, 1]], [[0, 1], [1, 0], [1, 1], [2, 0]]];\n\t\n\t// 计分规则：消除行数与相应的分数\n\tvar clearPoints = [100, 300, 500, 800];\n\t\n\t// 游戏不同的级别相应的游戏速度；自动根据该数组判断最大级别\n\tvar speeds = [800, 650, 500, 400, 300, 200];\n\t\n\t// 级别相对应的方块组合的在移动时的延迟\n\tvar delays = [50, 60, 70, 80, 90, 100];\n\t\n\t// 代表每消除该数目的行数时，游戏会更新级别\n\tvar linesForEachLevel = 20;\n\t\n\t// 代表在游戏在每次更新级别后方块落地的分数增量\n\tvar blockScoreIncrement = 2;\n\t\n\t// 代表在随机生成方块时的概率\n\tvar generateBlockProb = 0.6;\n\t\n\t// 能够生成的最多的初始行数目\n\tvar maxStartLines = 10;\n\t\n\t// 按键设置：\n\t//     keyCode 为按键相应的键码\n\t//     sel 为按键在 HTML 中的 id ，用于做选择器\n\tvar keySettings = {\n\t    rotate: {\n\t        keyCode: 38, // 方向键向上\n\t        sel: '#rotate_btn'\n\t    },\n\t    speedUp: {\n\t        keyCode: 40, // 方向键向下\n\t        sel: '#down_btn'\n\t    },\n\t    left: {\n\t        keyCode: 37, // 方向键向左\n\t        sel: '#left_btn'\n\t    },\n\t    right: {\n\t        keyCode: 39, // 方向键向右\n\t        sel: '#right_btn'\n\t    },\n\t    drop: {\n\t        keyCode: 32, // 空格\n\t        sel: '#drop_btn'\n\t    },\n\t    pause: {\n\t        keyCode: 80, // P键\n\t        sel: '#pause_btn'\n\t    },\n\t    reset: {\n\t        keyCode: 82, // R键\n\t        sel: '#reset_btn'\n\t    }\n\t\n\t    // 按钮按下，松开的类名\n\t};var btnDownState = 'pressed';\n\tvar btnUpState = '';\n\t\n\t// 暂停标志暂停，不暂停的类名\n\tvar pauseState = 'paused';\n\tvar unpauseState = 'unpaused';\n\t\n\t// 游戏时钟滴答的类名\n\tvar tikState = 'tik';\n\tvar tokState = 'tok';\n\t\n\tvar defaultColor = 'rgb(135, 147, 100)'; // 方块没有被占据时的颜色\n\tvar occupiedColor = 'rgb(0, 0, 0)'; // 方块被占据时的颜色\n\tvar indicateColor = 'rgb(180, 0, 0)'; // 高亮显示方块时的颜色\n\t\n\texports.blockType = blockType;\n\texports.clearPoints = clearPoints;\n\texports.speeds = speeds;\n\texports.delays = delays;\n\texports.linesForEachLevel = linesForEachLevel;\n\texports.blockScoreIncrement = blockScoreIncrement;\n\texports.generateBlockProb = generateBlockProb;\n\texports.maxStartLines = maxStartLines;\n\texports.keySettings = keySettings;\n\texports.btnDownState = btnDownState;\n\texports.btnUpState = btnUpState;\n\texports.pauseState = pauseState;\n\texports.unpauseState = unpauseState;\n\texports.tikState = tikState;\n\texports.tokState = tokState;\n\texports.defaultColor = defaultColor;\n\texports.occupiedColor = occupiedColor;\n\texports.indicateColor = indicateColor;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t// 用于判断坐标组合组合是否会与游戏区域冲突\n\tvar collide = function collide(x, y, coors, area) {\n\t    // x 为方块组合的 x 轴的基准坐标\n\t    // y 为方块组合的 y 轴的基准坐标\n\t    // 坐标数组是已经以 x 坐标也就是 coors[0] 为优先排序过了\n\t    if (x + coors[0][0] < 0 || x + coors[3][0] >= area.column) {\n\t        return true;\n\t    }\n\t\n\t    return coors.map(function (c) {\n\t        // y + c[1] < 0 means the block is above the field\n\t        // so literally it dosen't collides\n\t        var coorY = y + c[1];\n\t        return !(coorY < 0 || !area.board[coorY][x + c[0]].occupied);\n\t    }).reduce(function (prev, cond) {\n\t        return prev || cond;\n\t    });\n\t};\n\t\n\t// 计算坐标组合的 x 坐标或 y 坐标的差\n\tvar coorDiff = function coorDiff(coors, index) {\n\t    var array = coors.map(function (c) {\n\t        return c[index];\n\t    });\n\t\n\t    return Math.max.apply(Math, _toConsumableArray(array)) - Math.min.apply(Math, _toConsumableArray(array));\n\t};\n\t\n\tvar coorCompare = function coorCompare(coor1, coor2) {\n\t    return coor1[0] == coor2[0] ? coor1[1] - coor2[1] : coor1[0] - coor2[0];\n\t};\n\t\n\t// 判断是否为移动端\n\tvar isMobile = function isMobile() {\n\t    var ua = navigator.userAgent;\n\t    var android = /Android (\\d+\\.\\d+)/.test(ua);\n\t    var iphone = ua.indexOf('iPhone') > -1;\n\t    var ipod = ua.indexOf('iPod') > -1;\n\t    var ipad = ua.indexOf('iPad') > -1;\n\t    var nokiaN = ua.indexOf('NokiaN') > -1;\n\t    return android || iphone || ipod || ipad || nokiaN;\n\t};\n\t\n\texports.collide = collide;\n\texports.coorDiff = coorDiff;\n\texports.coorCompare = coorCompare;\n\texports.isMobile = isMobile;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _game_indicator = __webpack_require__(8);\n\t\n\tvar _game_indicator2 = _interopRequireDefault(_game_indicator);\n\t\n\tvar _game_board = __webpack_require__(9);\n\t\n\tvar _game_board2 = _interopRequireDefault(_game_board);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 用于表示游戏界面的时钟\n\tvar Clock = function () {\n\t    function Clock(game) {\n\t        _classCallCheck(this, Clock);\n\t\n\t        this.game = game;\n\t        this.setup();\n\t    }\n\t\n\t    _createClass(Clock, [{\n\t        key: 'setup',\n\t\n\t\n\t        // 初始化两个板子分别表示小时以及分钟，一个“滴答”的显示器\n\t        value: function setup() {\n\t            var _this = this;\n\t\n\t            this.hourBoard = _game_board2.default.new('#s_hour span');\n\t            this.minuteBoard = _game_board2.default.new('#s_minute span');\n\t            this.indicator = _game_indicator2.default.new('#s_clock_indi');\n\t\n\t            var now = new Date();\n\t            this.hours = now.getHours();\n\t            this.minutes = now.getMinutes();\n\t            this.seconds = now.getSeconds();\n\t\n\t            this.hourBoard.setNumber(this.hours);\n\t            this.minuteBoard.setNumber(this.minutes);\n\t\n\t            // 每秒更新一次\n\t            setInterval(function () {\n\t                _this.update();\n\t            }, 1000);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            if (++this.seconds == 60) {\n\t                this.seconds = 0;\n\t                if (++this.minutes == 60) {\n\t                    this.minutes = 0;\n\t                    if (++this.hours == 24) {\n\t                        this.hours = 0;\n\t                    }\n\t                    this.hourBoard.setNumber(this.hours);\n\t                }\n\t                this.minuteBoard.setNumber(this.minutes);\n\t            }\n\t\n\t            // 通过设置tikState，tokState两种状态相应的类名实现“滴答”的效果\n\t            var state = this.seconds % 2 == 0 ? _const.tikState : _const.tokState;\n\t            this.indicator.setState(state);\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return Clock;\n\t}();\n\t\n\texports.default = Clock;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 用来管理 状态指示器\n\tvar GameIndicator = function () {\n\t    function GameIndicator(sel) {\n\t        _classCallCheck(this, GameIndicator);\n\t\n\t        this.component = document.querySelector(sel);\n\t    }\n\t\n\t    _createClass(GameIndicator, [{\n\t        key: \"setState\",\n\t        value: function setState(state) {\n\t            this.component.className = state;\n\t        }\n\t    }], [{\n\t        key: \"new\",\n\t        value: function _new() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            return new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t        }\n\t    }]);\n\t\n\t    return GameIndicator;\n\t}();\n\t\n\texports.default = GameIndicator;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar GameBoard = function () {\n\t    // Board 用来管理跟数字有关的 HTMLElement 实例\n\t    function GameBoard(eltsSel, titleSel) {\n\t        _classCallCheck(this, GameBoard);\n\t\n\t        this.numElts = document.querySelectorAll(eltsSel);\n\t        if (titleSel) {\n\t            this.titleCpn = document.querySelector(titleSel);\n\t        }\n\t    }\n\t\n\t    _createClass(GameBoard, [{\n\t        key: 'setTitle',\n\t        value: function setTitle(str) {\n\t            this.titleCpn.innerText = str;\n\t        }\n\t\n\t        // 通过判断元素的样式来计算所显示的数字的大小\n\t\n\t    }, {\n\t        key: 'getNumber',\n\t        value: function getNumber() {\n\t            var lastChar = void 0,\n\t                eltClass = void 0,\n\t                n = void 0,\n\t                sum = 0;\n\t            for (var i = this.numElts.length - 1; i >= 0; i--) {\n\t                eltClass = this.numElts[i].className;\n\t                lastChar = eltClass == '' ? 0 : eltClass[eltClass.length - 1];\n\t                n = parseInt(lastChar);\n\t                if (!isNaN(n)) {\n\t                    sum = 10 * sum + n;\n\t                }\n\t            }\n\t            return sum;\n\t        }\n\t\n\t        // 通过改变元素的样式来改变显示的数字\n\t\n\t    }, {\n\t        key: 'setNumber',\n\t        value: function setNumber(num) {\n\t            var r = void 0,\n\t                length = this.numElts.length;\n\t            var i = 0;\n\t            for (; i < length && num > 0; i++) {\n\t                r = num % 10;\n\t                this.setDigit(r, this.numElts[i]);\n\t                num = (num - r) / 10;\n\t            }\n\t\n\t            if (i == 0) {\n\t                this.setDigit(0, this.numElts[0]);\n\t                i++;\n\t            }\n\t            for (; i < length; i++) {\n\t                this.setDigit(null, this.numElts[i]);\n\t            }\n\t        }\n\t\n\t        // digit 为 null 时清除状态\n\t        // 否则就设置与 digit 相对应的数字状态\n\t\n\t    }, {\n\t        key: 'setDigit',\n\t        value: function setDigit(digit, elt) {\n\t            elt.className = digit == null ? '' : 'n' + digit;\n\t        }\n\t    }], [{\n\t        key: 'new',\n\t        value: function _new() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            return new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t        }\n\t    }]);\n\t\n\t    return GameBoard;\n\t}();\n\t\n\texports.default = GameBoard;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _game_indicator = __webpack_require__(8);\n\t\n\tvar _game_indicator2 = _interopRequireDefault(_game_indicator);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PauseSign = function (_GameIndicator) {\n\t    _inherits(PauseSign, _GameIndicator);\n\t\n\t    // 用来管理 暂停功能 以及 在游戏界面中的暂停标志\n\t    function PauseSign() {\n\t        _classCallCheck(this, PauseSign);\n\t\n\t        var _this = _possibleConstructorReturn(this, (PauseSign.__proto__ || Object.getPrototypeOf(PauseSign)).call(this, '#s_psign'));\n\t\n\t        _this.process = null;\n\t        _this.paused = false;\n\t        _this.count = 0;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(PauseSign, [{\n\t        key: 'pause',\n\t        value: function pause() {\n\t            var _this2 = this;\n\t\n\t            this.paused = true;\n\t            // 暂停指示器闪烁\n\t            this.process = setInterval(function () {\n\t                _this2.count++ % 2 == 0 ? _this2.setState(_const.pauseState) : _this2.setState(_const.unpauseState);\n\t            }, 1000 / 4);\n\t        }\n\t    }, {\n\t        key: 'unpause',\n\t        value: function unpause() {\n\t            this.paused = false;\n\t            this.count = 0;\n\t            this.setState(_const.unpauseState);\n\t            clearInterval(this.process);\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return PauseSign;\n\t}(_game_indicator2.default);\n\t\n\texports.default = PauseSign;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar keys = {\n\t    lastRecordKey: \"tetris-last-record\",\n\t    maxRecordKey: \"tetris-max-record\"\n\t\n\t    // 用于对游戏分数存储的处理\n\t};\n\tvar ScoreStorage = function () {\n\t    function ScoreStorage() {\n\t        _classCallCheck(this, ScoreStorage);\n\t\n\t        this.storage = this.getLocalStorage();\n\t    }\n\t\n\t    _createClass(ScoreStorage, [{\n\t        key: \"getLocalStorage\",\n\t        value: function getLocalStorage() {\n\t            if ((typeof localStorage === \"undefined\" ? \"undefined\" : _typeof(localStorage)) == 'object') {\n\t                return localStorage;\n\t            } else if ((typeof globalStorage === \"undefined\" ? \"undefined\" : _typeof(globalStorage)) == 'object') {\n\t                return globalStorage[location.host];\n\t            } else {\n\t                console.warn('Local storage not available. Your record will be forgot after leave');\n\t                return {};\n\t            }\n\t        }\n\t    }, {\n\t        key: \"getRecord\",\n\t        value: function getRecord(key) {\n\t            var num = parseInt(this.storage[key]);\n\t            return isNaN(num) ? 0 : num;\n\t        }\n\t    }, {\n\t        key: \"setRecord\",\n\t        value: function setRecord(key, val) {\n\t            this.storage[key] = val;\n\t        }\n\t    }, {\n\t        key: \"getLastRecord\",\n\t        value: function getLastRecord() {\n\t            return this.getRecord(keys.lastRecordKey);\n\t        }\n\t    }, {\n\t        key: \"setLastRecord\",\n\t        value: function setLastRecord(num) {\n\t            this.setRecord(keys.lastRecordKey, num);\n\t        }\n\t    }, {\n\t        key: \"getMaxRecord\",\n\t        value: function getMaxRecord() {\n\t            return this.getRecord(keys.maxRecordKey);\n\t        }\n\t    }, {\n\t        key: \"setMaxRecord\",\n\t        value: function setMaxRecord(num) {\n\t            this.setRecord(keys.maxRecordKey, num);\n\t        }\n\t    }], [{\n\t        key: \"instance\",\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return ScoreStorage;\n\t}();\n\t\n\texports.default = ScoreStorage;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 用于表示一个俄罗斯方块活动的区域\n\tvar GameArea = function () {\n\t    function GameArea(game) {\n\t        _classCallCheck(this, GameArea);\n\t\n\t        this.game = game;\n\t        this.board = [];\n\t        this.scoring = false;\n\t        this.process = null;\n\t        this.count = 0;\n\t        this.default();\n\t    }\n\t\n\t    _createClass(GameArea, [{\n\t        key: 'default',\n\t        value: function _default() {\n\t            // 游戏区域的行数\n\t            this.row = 20;\n\t            // 游戏区域的列数\n\t            this.column = 10;\n\t            this.defaultColor = _const.defaultColor;\n\t            this.indicateColor = _const.indicateColor;\n\t            // 以下两项用于设置界面中在清除满行时的高亮显示\n\t            this.fullLinesEchoSpeed = 15; // board 中的满行显示的速度\n\t            this.fullLinesEchoTimes = 3; // 重复显示 board 中满行的次数\n\t        }\n\t\n\t        // 初始化board，board用于表示游戏界面的所有方块\n\t        // 初始时将所有方块的颜色设置为默认的颜色，occupied用于表示该方块时候已经被占据\n\t\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            var row = this.row;\n\t            for (var i = 0; i < row; i++) {\n\t                this.board[i] = [];\n\t                var line = this.board[i];\n\t                for (var j = 0; j < this.column; j++) {\n\t                    line[j] = {\n\t                        color: this.defaultColor,\n\t                        occupied: false\n\t                    };\n\t                }\n\t            }\n\t        }\n\t\n\t        // 设置初始行\n\t\n\t    }, {\n\t        key: 'setPresetLines',\n\t        value: function setPresetLines(num) {\n\t            this.generateRandomRows(num);\n\t        }\n\t\n\t        // 设置一整行的方块\n\t\n\t    }, {\n\t        key: 'setLine',\n\t        value: function setLine(lineIndex, color, occupied) {\n\t            var line = this.board[lineIndex];\n\t            for (var i = 0; i < this.column; i++) {\n\t                var block = line[i];\n\t                block.color = color;\n\t                block.occupied = occupied;\n\t            }\n\t        }\n\t\n\t        // 生成随机行\n\t\n\t    }, {\n\t        key: 'generateRandomRows',\n\t        value: function generateRandomRows(num) {\n\t            var lastIndex = this.row - num;\n\t            for (var i = this.row - 1; i >= lastIndex; i--) {\n\t                var row = this.board[i];\n\t                for (var j = this.column - 1; j >= 0; j--) {\n\t                    var block = row[j];\n\t                    var generateBlock = Math.random() <= _const.generateBlockProb;\n\t                    block.color = generateBlock ? _const.occupiedColor : _const.defaultColor;\n\t                    block.occupied = generateBlock;\n\t                }\n\t\n\t                if (this.lineIsFull(row)) {\n\t                    var index = Math.floor(Math.random() * 10);\n\t                    var _block = row[index];\n\t                    _block.color = _const.defaultColor;\n\t                    _block.occupied = false;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'lineIsFull',\n\t        value: function lineIsFull(line) {\n\t            return line.map(function (b) {\n\t                return b.occupied;\n\t            }).reduce(function (prev, cur) {\n\t                return prev && cur;\n\t            });\n\t        }\n\t\n\t        // 设置用于在清除满行的执行的对清除行数计分函数\n\t\n\t    }, {\n\t        key: 'setUpScoreRule',\n\t        value: function setUpScoreRule(func) {\n\t            this.scoreFunc = function (rows) {\n\t                func && func(rows);\n\t            };\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var game = this.game;\n\t            for (var i = 0; i < this.row; i++) {\n\t                for (var j = 0; j < this.column; j++) {\n\t                    game.drawBlock(j, i, this.board[i][j].color);\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            var lines = [];\n\t            for (var i = 0; i < this.row; i++) {\n\t                if (this.lineIsFull(this.board[i])) {\n\t                    lines.push(i);\n\t                }\n\t            }\n\t\n\t            if (lines.length > 0) {\n\t                this.scoring = true;\n\t                this.lines = lines;\n\t                this.score();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'score',\n\t        value: function score() {\n\t            var _this = this;\n\t\n\t            this.scoring = true;\n\t            this.process = setInterval(function () {\n\t                _this.echoFullLines();\n\t            }, 1000 / this.fullLinesEchoSpeed);\n\t        }\n\t\n\t        // 通过更新 full lines 的颜色来高亮显示 full lines\n\t\n\t    }, {\n\t        key: 'echoFullLines',\n\t        value: function echoFullLines() {\n\t            var _this2 = this;\n\t\n\t            // 游戏暂停时不更新\n\t            if (this.game.isPaused()) {\n\t                return;\n\t            }\n\t\n\t            if (this.count++ > this.fullLinesEchoTimes * 2 - 1) {\n\t                this.count = 0;\n\t                this.scoring = false;\n\t                clearInterval(this.process);\n\t                this.clearFullLines();\n\t                return;\n\t            }\n\t            var color = this.count % 2 == 0 ? this.defaultColor : this.indicateColor;\n\t            this.lines.map(function (li) {\n\t                _this2.setLine(li, color, false);\n\t            });\n\t        }\n\t\n\t        // 在 echoFullLines() 中 full lines 的颜色已设置成\n\t        // defaultColor 因此直接将它移到数组顶部\n\t\n\t    }, {\n\t        key: 'clearFullLines',\n\t        value: function clearFullLines() {\n\t            var _this3 = this;\n\t\n\t            var ls = this.lines;\n\t            ls.forEach(function (li) {\n\t                var deleted = _this3.board.splice(li, 1)[0];\n\t                _this3.board.unshift(deleted);\n\t            });\n\t            this.scoreFunc(ls.length);\n\t            this.lines = null;\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance(game) {\n\t            this.i = this.i || new this(game);\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return GameArea;\n\t}();\n\t\n\texports.default = GameArea;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _game_scene = __webpack_require__(14);\n\t\n\tvar _game_scene2 = _interopRequireDefault(_game_scene);\n\t\n\tvar _title = __webpack_require__(15);\n\t\n\tvar _title2 = _interopRequireDefault(_title);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SceneReset = function (_GameScene) {\n\t    _inherits(SceneReset, _GameScene);\n\t\n\t    function SceneReset(game) {\n\t        _classCallCheck(this, SceneReset);\n\t\n\t        return _possibleConstructorReturn(this, (SceneReset.__proto__ || Object.getPrototypeOf(SceneReset)).call(this, game));\n\t    }\n\t\n\t    _createClass(SceneReset, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            this.pushElement(this.game.area);\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            this.index = 19;\n\t            this.update = this.fillArea;\n\t        }\n\t    }, {\n\t        key: 'fillArea',\n\t        value: function fillArea() {\n\t            var area = this.game.area;\n\t            area.setLine(this.index, _const.occupiedColor, false);\n\t            if (--this.index < 0) {\n\t                this.index = 0;\n\t                this.update = this.clearArea;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'clearArea',\n\t        value: function clearArea() {\n\t            var area = this.game.area;\n\t            area.setLine(this.index, _const.defaultColor, false);\n\t            if (++this.index == 20) {\n\t                this.restartGame();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'restartGame',\n\t        value: function restartGame() {\n\t            this.game.replaceScene(_title2.default, 'title');\n\t        }\n\t    }]);\n\t\n\t    return SceneReset;\n\t}(_game_scene2.default);\n\t\n\texports.default = SceneReset;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 游戏场景的元类\n\tvar GameScene = function () {\n\t    function GameScene(game) {\n\t        _classCallCheck(this, GameScene);\n\t\n\t        this.game = game;\n\t        this.elements = [];\n\t        this.setup();\n\t    }\n\t\n\t    _createClass(GameScene, [{\n\t        key: \"setup\",\n\t        value: function setup() {}\n\t    }, {\n\t        key: \"init\",\n\t        value: function init() {}\n\t\n\t        // 直接触发所有子元素的 draw\n\t\n\t    }, {\n\t        key: \"draw\",\n\t        value: function draw() {\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var e = _step.value;\n\t\n\t                    e.draw();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"update\",\n\t        value: function update() {}\n\t    }, {\n\t        key: \"pushElement\",\n\t        value: function pushElement(elt) {\n\t            this.elements.push(elt);\n\t        }\n\t    }], [{\n\t        key: \"instance\",\n\t        value: function instance(game) {\n\t            this.i = this.i || new this(game);\n\t            this.i.init();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return GameScene;\n\t}();\n\t\n\texports.default = GameScene;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _game_scene = __webpack_require__(14);\n\t\n\tvar _game_scene2 = _interopRequireDefault(_game_scene);\n\t\n\tvar _main = __webpack_require__(16);\n\t\n\tvar _main2 = _interopRequireDefault(_main);\n\t\n\tvar _action_controller = __webpack_require__(19);\n\t\n\tvar _action_controller2 = _interopRequireDefault(_action_controller);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SceneTitle = function (_GameScene) {\n\t    _inherits(SceneTitle, _GameScene);\n\t\n\t    function SceneTitle(game) {\n\t        _classCallCheck(this, SceneTitle);\n\t\n\t        var _this = _possibleConstructorReturn(this, (SceneTitle.__proto__ || Object.getPrototypeOf(SceneTitle)).call(this, game));\n\t\n\t        _this.title = document.querySelector('#title');\n\t        // 页面标题闪烁的间隔\n\t        _this.showGap = Math.floor(game.fps * 0.75);\n\t        _this.scoreShowGap = game.fps * 2;\n\t        _this.count = 0;\n\t        _this.titleType = 1;\n\t        _this.startLevel = 1;\n\t        _this.maxLevel = _const.speeds.length;\n\t        _this.startLines = 0;\n\t        _this.maxStartLines = _const.maxStartLines;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(SceneTitle, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            var game = this.game;\n\t            var that = this;\n\t\n\t            var begin = 250;\n\t            var interval = 150;\n\t\n\t            var a = [];\n\t            var b = [1, 2].concat(a);\n\t            // 注册“降落”按键为开始游戏的按键\n\t            var dropCode = _const.keySettings.drop.keyCode;\n\t            game.registerAction(dropCode, _action_controller2.default.new({\n\t                key: 'drop',\n\t                begin: begin,\n\t                interval: interval,\n\t                callback: function callback() {\n\t                    that.startGame();\n\t                }\n\t            }));\n\t\n\t            // 注册“向左”按键为降低初始难度\n\t            var leftCode = _const.keySettings.left.keyCode;\n\t            game.registerAction(leftCode, _action_controller2.default.new({\n\t                key: 'left',\n\t                begin: begin,\n\t                interval: interval,\n\t                callback: function callback() {\n\t                    that.updateLevel(-1);\n\t                }\n\t            }));\n\t\n\t            // 注册“向右”按键为降低初始难度\n\t            var rightCode = _const.keySettings.right.keyCode;\n\t            game.registerAction(rightCode, _action_controller2.default.new({\n\t                key: 'right',\n\t                begin: begin,\n\t                interval: interval,\n\t                callback: function callback() {\n\t                    that.updateLevel(1);\n\t                }\n\t            }));\n\t\n\t            // 注册“旋转”按键为增加初始行\n\t            var upCode = _const.keySettings.rotate.keyCode;\n\t            game.registerAction(upCode, _action_controller2.default.new({\n\t                key: 'up',\n\t                begin: begin,\n\t                interval: interval,\n\t                callback: function callback() {\n\t                    that.updateLines(1);\n\t                }\n\t            }));\n\t\n\t            // 注册“加速”按键为减少初始行\n\t            var downCode = _const.keySettings.speedUp.keyCode;\n\t            game.registerAction(downCode, _action_controller2.default.new({\n\t                key: 'down',\n\t                begin: begin,\n\t                interval: interval,\n\t                callback: function callback() {\n\t                    that.updateLines(-1);\n\t                }\n\t            }));\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            var game = this.game;\n\t\n\t            game.setLevel(this.startLevel);\n\t            game.setLineBoardTitle('Start lines');\n\t            game.setLines(this.startLines);\n\t            game.area.draw();\n\t        }\n\t    }, {\n\t        key: 'startGame',\n\t        value: function startGame() {\n\t            var game = this.game;\n\t            game.replaceScene(_main2.default, 'main');\n\t            this.title.style.visibility = 'hidden';\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            var t = this.title;\n\t            var game = this.game;\n\t            // 反复显示标题\n\t            if (this.count % this.showGap == 0) {\n\t                var visible = t.style.visibility == 'visible';\n\t                t.style.visibility = visible ? 'hidden' : 'visible';\n\t            }\n\t\n\t            // 反复切换显示“上局游戏分数”，以及“最大游戏分数”\n\t            if (this.count % this.scoreShowGap == 0) {\n\t                var sb = game.scoreBoard;\n\t                var s = game.storage;\n\t                if (this.titleType) {\n\t                    sb.setTitle('Max');\n\t                    sb.setNumber(s.getMaxRecord());\n\t                } else {\n\t                    sb.setTitle('Last Round');\n\t                    sb.setNumber(s.getLastRecord());\n\t                }\n\t                this.titleType = !this.titleType;\n\t            }\n\t            this.count++;\n\t        }\n\t    }, {\n\t        key: 'updateLevel',\n\t        value: function updateLevel(num) {\n\t            var level = this.startLevel + num;\n\t            if (level < 1) {\n\t                level += this.maxLevel;\n\t            } else if (level > this.maxLevel) {\n\t                level -= this.maxLevel;\n\t            }\n\t\n\t            this.game.setLevel(level);\n\t            this.startLevel = level;\n\t        }\n\t    }, {\n\t        key: 'updateLines',\n\t        value: function updateLines(num) {\n\t            var lines = this.startLines + num;\n\t            if (lines < 0) {\n\t                lines += this.maxStartLines + 1;\n\t            } else if (lines > this.maxStartLines) {\n\t                lines -= this.maxStartLines + 1;\n\t            }\n\t\n\t            this.game.setLines(lines);\n\t            this.startLines = lines;\n\t        }\n\t    }]);\n\t\n\t    return SceneTitle;\n\t}(_game_scene2.default);\n\t\n\texports.default = SceneTitle;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _game_scene = __webpack_require__(14);\n\t\n\tvar _game_scene2 = _interopRequireDefault(_game_scene);\n\t\n\tvar _blockcomb = __webpack_require__(17);\n\t\n\tvar _blockcomb2 = _interopRequireDefault(_blockcomb);\n\t\n\tvar _index = __webpack_require__(13);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _action_controller = __webpack_require__(19);\n\t\n\tvar _action_controller2 = _interopRequireDefault(_action_controller);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SceneMain = function (_GameScene) {\n\t    _inherits(SceneMain, _GameScene);\n\t\n\t    function SceneMain(game) {\n\t        _classCallCheck(this, SceneMain);\n\t\n\t        // 每组方块到达底部时得到的分数\n\t        var _this = _possibleConstructorReturn(this, (SceneMain.__proto__ || Object.getPrototypeOf(SceneMain)).call(this, game));\n\t\n\t        _this.eachBlockScore = 10;\n\t        _this.clearLines = 0;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(SceneMain, [{\n\t        key: 'setup',\n\t        value: function setup() {\n\t            var _this2 = this;\n\t\n\t            var that = this;\n\t            var game = this.game;\n\t            var area = game.area;\n\t\n\t            this.bc = _blockcomb2.default.instance(game);\n\t            this.pushElement(area);\n\t            this.pushElement(this.bc);\n\t\n\t            // 设置 area 的计分规则\n\t            area.setUpScoreRule(function (rows) {\n\t                _this2.countScore(rows);\n\t            });\n\t\n\t            // 注册“左移”按键事件\n\t            var leftCode = _const.keySettings.left.keyCode;\n\t            game.registerAction(leftCode, _action_controller2.default.new({\n\t                key: 'left',\n\t                begin: 200,\n\t                interval: 100,\n\t                callback: function callback() {\n\t                    that.bc.moveLeft();\n\t                }\n\t            }));\n\t\n\t            // 注册“右移”按键事件\n\t            var rightCode = _const.keySettings.right.keyCode;\n\t            game.registerAction(rightCode, _action_controller2.default.new({\n\t                key: 'right',\n\t                begin: 200,\n\t                interval: 100,\n\t                callback: function callback() {\n\t                    that.bc.moveRight();\n\t                }\n\t            }));\n\t\n\t            // 注册“加速”按键事件\n\t            var speedUpCode = _const.keySettings.speedUp.keyCode;\n\t            game.registerAction(speedUpCode, _action_controller2.default.new({\n\t                key: 'speedUp',\n\t                callback: function callback(clear) {\n\t                    that.bc.retired ? clear() : that.bc.updateCD = -10;\n\t                }\n\t            }));\n\t\n\t            // 注册“旋转”按键事件\n\t            var rotateCode = _const.keySettings.rotate.keyCode;\n\t            game.registerAction(rotateCode, _action_controller2.default.new({\n\t                key: 'rotate',\n\t                once: true,\n\t                callback: function callback() {\n\t                    that.bc.rotate();\n\t                }\n\t            }));\n\t\n\t            // 注册“降落”按键事件\n\t            var dropCode = _const.keySettings.drop.keyCode;\n\t            game.registerAction(dropCode, _action_controller2.default.new({\n\t                key: 'drop',\n\t                once: true,\n\t                callback: function callback() {\n\t                    that.bc.drop();\n\t                }\n\t            }));\n\t\n\t            // 注册“重置”按键事件\n\t            var resetCode = _const.keySettings.reset.keyCode;\n\t            game.registerAction(resetCode, _action_controller2.default.new({\n\t                key: 'reset',\n\t                once: true,\n\t                callback: function callback() {\n\t                    that.resetGame();\n\t                }\n\t            }));\n\t\n\t            // 注册“暂停”按键事件，并设置为game的 pause key\n\t            var pauseCode = _const.keySettings.pause.keyCode;\n\t            game.registerAction(pauseCode, _action_controller2.default.new({\n\t                key: 'pause',\n\t                once: true,\n\t                callback: function callback() {\n\t                    game.isPaused() ? game.unpause() : game.pause();\n\t                }\n\t            }));\n\t            game.setPauseKeyCode(pauseCode);\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            var game = this.game;\n\t\n\t            var level = this.game.getLevel();\n\t            this.bc.setLevel(level);\n\t            // 每次进入场景都行初始化 blockcomb\n\t            this.bc.init();\n\t\n\t            var presetLines = game.getLines();\n\t            game.area.setPresetLines(presetLines);\n\t\n\t            game.setLineBoardTitle('Cleans');\n\t            game.setLines(0);\n\t\n\t            game.setScoreBoardTitle('Points');\n\t            game.setScore(0);\n\t\n\t            // 初始化计分的有关信息\n\t            this.eachBlockScore = 10;\n\t            this.clearLines = 0;\n\t        }\n\t    }, {\n\t        key: 'addScore',\n\t        value: function addScore(score) {\n\t            var game = this.game;\n\t            var sprev = game.getScore();\n\t            game.setScore(score + sprev);\n\t        }\n\t    }, {\n\t        key: 'countScore',\n\t        value: function countScore(rows) {\n\t            if (rows > 0) {\n\t                var game = this.game;\n\t                var cprev = game.getLines();\n\t                var lineAmount = rows + cprev;\n\t                game.setLines(lineAmount);\n\t\n\t                this.addScore(_const.clearPoints[rows - 1]);\n\t\n\t                this.clearLines += rows;\n\t                if (this.clearLines >= _const.linesForEachLevel) {\n\t                    this.clearLines -= _const.linesForEachLevel;\n\t                    this.bc.updateLevel();\n\t                    this.eachBlockScore += _const.blockScoreIncrement;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'resetGame',\n\t        value: function resetGame() {\n\t            var game = this.game;\n\t\n\t            game.replaceScene(_index2.default, 'Reset');\n\t            var s = game.storage;\n\t            var maxRecord = s.getMaxRecord();\n\t            var lastRecord = game.scoreBoard.getNumber();\n\t            if (lastRecord > maxRecord) {\n\t                s.setMaxRecord(lastRecord);\n\t            }\n\t            s.setLastRecord(lastRecord);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            var bc = this.bc;\n\t            var game = this.game;\n\t            var area = game.area;\n\t\n\t            if (game.isPaused() || area.scoring) {\n\t                return;\n\t            }\n\t\n\t            if (bc.retired) {\n\t                if (bc.y < 0) {\n\t                    this.resetGame();\n\t                } else {\n\t                    bc.occupy();\n\t                    this.addScore(this.eachBlockScore);\n\t                    area.update();\n\t                    bc.init();\n\t                }\n\t            } else {\n\t                bc.update();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return SceneMain;\n\t}(_game_scene2.default);\n\t\n\texports.default = SceneMain;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _preview = __webpack_require__(18);\n\t\n\tvar _preview2 = _interopRequireDefault(_preview);\n\t\n\tvar _function = __webpack_require__(6);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 方块组合\n\tvar BlockComb = function () {\n\t    function BlockComb(game) {\n\t        _classCallCheck(this, BlockComb);\n\t\n\t        this.game = game;\n\t        this.maxLevel = _const.speeds.length;\n\t        this.default();\n\t        this.setup();\n\t    }\n\t\n\t    _createClass(BlockComb, [{\n\t        key: 'default',\n\t        value: function _default() {\n\t            // 整个方块组合的基准坐标\n\t            this.x = 0;\n\t            this.y = 0;\n\t            this.defaultColor = _const.occupiedColor;\n\t            // indicateColor 用于方块在到达底部的时候高亮显示的颜色\n\t            this.indicateColor = _const.indicateColor;\n\t            // blockcomb 下降的CD\n\t        }\n\t    }, {\n\t        key: 'setup',\n\t        value: function setup() {\n\t            this.preview = _preview2.default.instance(this.game);\n\t            this.preview.next();\n\t        }\n\t\n\t        // change the attrs of blockComb instead of creating a new one\n\t        // when the game need another block combination\n\t\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            var p = this.preview;\n\t            this.coors = p.coors;\n\t            // update preivew\n\t            p.next();\n\t            p.clear();\n\t            p.draw();\n\t\n\t            // x and y indicate block combination's place in board\n\t            this.x = 3;\n\t            this.y = -(0, _function.coorDiff)(this.coors, 1) - 1;\n\t            this.color = this.defaultColor;\n\t            this.updateCD = this.maxUpdateCD;\n\t            this.retired = false; // retired 为真时重置 blockcomb\n\t        }\n\t    }, {\n\t        key: 'setLevel',\n\t        value: function setLevel(level) {\n\t            this.level = level;\n\t            var fps = this.game.fps;\n\t\n\t            var speed = _const.speeds[this.level - 1];\n\t            this.maxUpdateCD = Math.floor(fps * speed / 1000);\n\t            this.updateCD = this.maxUpdateCD;\n\t\n\t            var delay = _const.delays[this.level - 1];\n\t            this.delay = Math.floor(fps * delay / 1000);\n\t        }\n\t    }, {\n\t        key: 'updateLevel',\n\t        value: function updateLevel() {\n\t            if (this.level < this.maxLevel) {\n\t                var next = this.level + 1;\n\t                this.setLevel(next);\n\t                this.game.setLevel(next);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'move',\n\t        value: function move(offset) {\n\t            // 方块退休时，不能移动\n\t            if (this.retired) {\n\t                return;\n\t            }\n\t\n\t            var area = this.game.area;\n\t            if (!(0, _function.collide)(this.x + offset, this.y, this.coors, area)) {\n\t                this.x += offset;\n\t                this.updateCD += this.delay;\n\t            } else {\n\t                this.updateCD += Math.round(this.delay / 2);\n\t            }\n\t\n\t            if (this.updateCD > this.maxUpdateCD) {\n\t                this.updateCD = this.maxUpdateCD;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'moveLeft',\n\t        value: function moveLeft() {\n\t            this.move(-1);\n\t        }\n\t    }, {\n\t        key: 'moveRight',\n\t        value: function moveRight() {\n\t            this.move(1);\n\t        }\n\t    }, {\n\t        key: 'rotate',\n\t        value: function rotate() {\n\t            // 方块退休时不能旋转\n\t            if (this.retired) {\n\t                return;\n\t            }\n\t            // get rotated coordinates\n\t            var newCoors = this.rotateCoors(this.coors);\n\t            var area = this.game.area;\n\t\n\t            // 得到所有可能的水平位移距离，通过让方块组合在贴墙时吗，改变其水平\n\t            // 基准坐标，使得能够贴墙旋转\n\t            var xDiff = (0, _function.coorDiff)(newCoors, 0);\n\t            var offsets = this.getOptionalOffsets(xDiff);\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = offsets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var offset = _step.value;\n\t\n\t                    if (!(0, _function.collide)(this.x + offset, this.y, newCoors, area)) {\n\t                        this.coors = newCoors;\n\t                        this.x += offset;\n\t                        return;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'rotateCoors',\n\t        value: function rotateCoors(coors) {\n\t            // 旋转坐标\n\t            var newCoors = coors.map(function (c) {\n\t                return [-c[1], c[0]];\n\t            });\n\t            // 对得到的新坐标排序，并且得到 x 坐标最小的坐标\n\t            var m = newCoors.sort(function (c1, c2) {\n\t                return c1[0] === c2[0] ? c1[1] - c2[1] : c1[0] - c2[0];\n\t            })[0];\n\t\n\t            // ensure the first one coor with 0 as x coordinate\n\t            // 确保第一个坐标的 x 坐标为0；长蛇状除外\n\t            var offsetX = m[0];\n\t            var offsetY = m[1];\n\t            var xDiff = (0, _function.coorDiff)(coors, 0);\n\t            // 判断是否为长蛇状且旋转前处于横放的状态\n\t            if (xDiff === 3) {\n\t                offsetX -= 1;\n\t                offsetY += 1;\n\t            }\n\t            return newCoors.map(function (c) {\n\t                return [c[0] - offsetX, c[1] - offsetY];\n\t            });\n\t        }\n\t    }, {\n\t        key: 'getOptionalOffsets',\n\t        value: function getOptionalOffsets(n) {\n\t            var offsets = [0];\n\t            for (var offset = 1; offset <= n; offset++) {\n\t                offsets.push(offset, -offset);\n\t            }\n\t            return offsets;\n\t        }\n\t\n\t        // 方块组合直接降落到底部\n\t\n\t    }, {\n\t        key: 'drop',\n\t        value: function drop() {\n\t            if (this.game.area.scoring) {\n\t                return; // area 在计分时不能 drop\n\t            }\n\t            while (!this.retired) {\n\t                this.updateY();\n\t            }\n\t        }\n\t\n\t        // 占据游戏画板\n\t\n\t    }, {\n\t        key: 'occupy',\n\t        value: function occupy() {\n\t            var board = this.game.area.board;\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.coors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var c = _step2.value;\n\t\n\t                    try {\n\t                        var block = board[this.y + c[1]][this.x + c[0]];\n\t                        block.occupied = true;\n\t                        block.color = this.defaultColor;\n\t                    } catch (ex) {}\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'retire',\n\t        value: function retire() {\n\t            this.retired = true;\n\t            this.color = this.indicateColor;\n\t        }\n\t\n\t        // 判断方块组合是否被挡住\n\t\n\t    }, {\n\t        key: 'isBlocked',\n\t        value: function isBlocked() {\n\t            var area = this.game.area;\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this.coors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var c = _step3.value;\n\t\n\t                    try {\n\t                        if (this.y + c[1] + 1 === area.row || area.board[this.y + c[1] + 1][this.x + c[0]].occupied) return true;\n\t                    } catch (err) {}\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var game = this.game;\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this.coors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var c = _step4.value;\n\t\n\t                    game.drawBlock(this.x + c[0], this.y + c[1], this.color);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'updateY',\n\t        value: function updateY() {\n\t            this.isBlocked() ? this.retire() : this.y++;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            if (this.updateCD <= 0) {\n\t                this.updateCD = this.maxUpdateCD;\n\t                this.updateY();\n\t            } else {\n\t                this.updateCD--;\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance(game) {\n\t            this.i = this.i || new this(game);\n\t\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return BlockComb;\n\t}();\n\t\n\texports.default = BlockComb;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _drawing_board = __webpack_require__(2);\n\t\n\tvar _drawing_board2 = _interopRequireDefault(_drawing_board);\n\t\n\tvar _const = __webpack_require__(5);\n\t\n\tvar _function = __webpack_require__(6);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// preview for next blockcomb 方块组合的预览\n\t// 每次在主要界面需要一个新的方块组合时，就将目前缓存的方块组\n\t// 合提供给主界面，之后再更新方块组合；\n\t// 方块组合为一个数组，包含四个表示的坐标的数组\n\tvar Preview = function (_DrawingBoard) {\n\t    _inherits(Preview, _DrawingBoard);\n\t\n\t    function Preview(game) {\n\t        _classCallCheck(this, Preview);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Preview.__proto__ || Object.getPrototypeOf(Preview)).call(this, '#next canvas'));\n\t\n\t        _this.game = game;\n\t        _this.default();\n\t        return _this;\n\t    }\n\t\n\t    // 更新 coors 供下一次 blockComb 重置使用\n\t\n\t\n\t    _createClass(Preview, [{\n\t        key: 'next',\n\t        value: function next() {\n\t            this.coors = this.randBlockType();\n\t            var diffX = (0, _function.coorDiff)(this.coors, 0);\n\t            this.offsetX = diffX == 1 ? 1 : diffX == 2 ? 0.5 : 0;\n\t            this.offsetY = (0, _function.coorDiff)(this.coors, 1) == 0 ? 0.5 : 0;\n\t        }\n\t    }, {\n\t        key: 'default',\n\t        value: function _default() {\n\t            this.color = _const.occupiedColor;\n\t        }\n\t    }, {\n\t        key: 'drawBlock',\n\t        value: function drawBlock(x, y) {\n\t            _get(Preview.prototype.__proto__ || Object.getPrototypeOf(Preview.prototype), 'drawBlock', this).call(this, x, y, this.game.blockSize, this.color);\n\t        }\n\t    }, {\n\t        key: 'randBlockType',\n\t        value: function randBlockType() {\n\t            var bt = _const.blockType;\n\t            return bt[Math.floor(Math.random() * bt.length)];\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var coors = this.coors;\n\t\n\t            // draw blockComb preview\n\t            var offsetX = this.offsetX;\n\t            var offsetY = this.offsetY;\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = coors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var c = _step.value;\n\t\n\t                    this.drawBlock(c[0] + offsetX, c[1] + offsetY);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            var c = this.canvas;\n\t            this.ctx.clearRect(0, 0, c.width, c.height);\n\t        }\n\t    }]);\n\t\n\t    return Preview;\n\t}(_drawing_board2.default);\n\t\n\texports.default = Preview;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar events = {};\n\t\n\tvar ActionController = function () {\n\t    function ActionController(options) {\n\t        _classCallCheck(this, ActionController);\n\t\n\t        this.key = options.key;\n\t        this.callback = options.callback || function () {};\n\t        this.begin = options.begin || 100;\n\t        this.interval = options.interval || 50;\n\t        this.once = options.once;\n\t    }\n\t\n\t    _createClass(ActionController, [{\n\t        key: \"down\",\n\t\n\t\n\t        // 键盘按下\n\t        value: function down() {\n\t            var _this = this;\n\t\n\t            this.clearAll();\n\t            this.callback(function () {\n\t                _this.up();\n\t            });\n\t            if (this.once === true) {\n\t                return;\n\t            }\n\t            this.start = this.begin;\n\t            this.loop();\n\t        }\n\t\n\t        // 键盘松开\n\t\n\t    }, {\n\t        key: \"up\",\n\t        value: function up() {\n\t            clearTimeout(events[this.key]);\n\t            events[this.key] = null;\n\t        }\n\t    }, {\n\t        key: \"loop\",\n\t        value: function loop() {\n\t            var _this2 = this;\n\t\n\t            events[this.key] = setTimeout(function () {\n\t                _this2.start = null;\n\t                _this2.loop();\n\t                _this2.callback(function () {\n\t                    return _this2.up();\n\t                });\n\t            }, this.start || this.interval);\n\t        }\n\t\n\t        // 清除所有触发的回调\n\t\n\t    }, {\n\t        key: \"clearAll\",\n\t        value: function clearAll() {\n\t            for (var k in events) {\n\t                var p = events[k];\n\t                if (p) {\n\t                    clearTimeout(events[k]);\n\t                    events[k] = null;\n\t                }\n\t            }\n\t        }\n\t    }], [{\n\t        key: \"new\",\n\t        value: function _new(options) {\n\t            return new this(options);\n\t        }\n\t    }]);\n\t\n\t    return ActionController;\n\t}();\n\t\n\texports.default = ActionController;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// 用于响应式调节游戏界面\n\tvar GameInterface = function () {\n\t    function GameInterface() {\n\t        _classCallCheck(this, GameInterface);\n\t\n\t        this.root = document.querySelector('#root');\n\t        this.game = document.querySelector('#game');\n\t        this.button = document.querySelector('#button');\n\t        this.curW = 440; // width of game interface\n\t        this.curH = 677; // height of game interface\n\t        this.aspectRatio = this.curW / this.curH;\n\t        this.process = null;\n\t    }\n\t\n\t    _createClass(GameInterface, [{\n\t        key: 'getBrowserInterfaceSize',\n\t        value: function getBrowserInterfaceSize() {\n\t            var pageWidth = window.innerWidth;\n\t            var pageHeight = window.innerHeight;\n\t\n\t            if (typeof pageWidth != \"number\") {\n\t                //在标准模式下面\n\t                if (document.compatMode == \"CSS1Compat\") {\n\t                    pageWidth = document.documentElement.clientWidth;\n\t                    pageHeight = document.documentElement.clientHeight;\n\t                } else {\n\t                    pageWidth = document.body.clientWidth;\n\t                    pageHeight = window.body.clientHeight;\n\t                }\n\t            }\n\t\n\t            return {\n\t                pageWidth: pageWidth,\n\t                pageHeight: pageHeight\n\t            };\n\t        }\n\t    }, {\n\t        key: 'resize',\n\t        value: function resize() {\n\t            var r = this.root;\n\t            var g = this.game;\n\t            var b = this.button;\n\t            var p = this.getBrowserInterfaceSize();\n\t            var w = p.pageWidth;\n\t            var h = p.pageHeight;\n\t\n\t            // 根据浏览器可用高度调整游戏界面\n\t            if (h != this.curH) {\n\t                var size = h / 677;\n\t                var negSize = size - 1;\n\t                var scale = 'scale(' + size + ')';\n\t                var nextW = 440 * size; // 浏览器 height 对应的游戏所需最大宽度\n\t\n\t                // 不需要调整界面部件大小的情况\n\t                if (h < this.curH && nextW < this.curW || // 正在缩小\n\t                h > this.curH || nextW > this.curW) {\n\t                    // 正在扩大\n\t                    r.style.width = nextW + 'px';\n\t                    this.curW = nextW;\n\t\n\t                    var leftOffset = 220 * negSize;\n\t                    g.style.transform = 'scale(' + size + ')';\n\t                    b.style.transform = 'scale(' + size + ')';\n\t                    g.style.marginLeft = leftOffset + 50 + 'px';\n\t                    b.style.marginLeft = leftOffset + 'px';\n\t                }\n\t\n\t                g.style.marginTop = 200 * negSize + 30 * size + 'px';\n\t                b.style.marginTop = 225 * negSize + 'px';\n\t\n\t                this.process = null;\n\t                this.curH = h;\n\t            }\n\t\n\t            // 根据浏览器可用宽度调整游戏界面\n\t            if (w < this.curH * this.aspectRatio) {\n\t                r.style.width = '100%';\n\t\n\t                if (w == this.curW) {\n\t                    return;\n\t                }\n\t\n\t                var _size = w / 440;\n\t                var _negSize = _size - 1;\n\t                var _scale = 'scale(' + _size + ')';\n\t\n\t                g.style.transform = b.style.transform = _scale;\n\t                g.style.marginLeft = 220 * _negSize + 50 + 'px';\n\t                b.style.marginLeft = 220 * _negSize + 'px';\n\t                this.curW = w;\n\t            } else {\n\t                r.style.width = h * this.aspectRatio + 'px';\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'instance',\n\t        value: function instance() {\n\t            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t                args[_key] = arguments[_key];\n\t            }\n\t\n\t            this.i = this.i || new (Function.prototype.bind.apply(this, [null].concat(args)))();\n\t            return this.i;\n\t        }\n\t    }]);\n\t\n\t    return GameInterface;\n\t}();\n\t\n\texports.default = GameInterface;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// app-1.0.0.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f91f4998d57626976484","import Game from './game/game'\r\nimport GameInterface from './view/game_interface'\r\nimport { isMobile } from './utils/function'\r\nimport style from '../css/index.css'\r\n\r\nwindow.onload = function() {\r\n    // 判断是否是移动端\r\n    if (isMobile()) {\r\n        var options = { passive: false }\r\n    \r\n        document.body.style.fontSize = '12px'\r\n        // 禁止双指缩放 以及 阻止长按出现菜单\r\n        document.documentElement.addEventListener('touchstart', (event) => {\r\n            event.preventDefault();\r\n        }, options);\r\n        \r\n        // 禁止双击缩放\r\n        var lastTouchEnd = 0;\r\n        document.documentElement.addEventListener('touchend', (event) => {\r\n            var now = Date.now();\r\n            if (now - lastTouchEnd <= 300) {\r\n                event.preventDefault();\r\n            }\r\n            lastTouchEnd = now;\r\n        }, options);\r\n        \r\n        // 禁止滚动\r\n        document.documentElement.addEventListener('touchmove', (event) => {\r\n            event.preventDefault()\r\n        }, options)\r\n    }\r\n\r\n    // 调整界面\r\n    var gi = GameInterface.instance()\r\n    gi.resize()\r\n    window.onresize = () => {\r\n        gi.resize()\r\n    }\r\n\r\n    // 开始游戏\r\n    var g = Game.instance(function (game) {\r\n        game.run()\r\n    })\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/main.js","import DrawingBoard from './drawing_board'\r\nimport EventController from '../controller/event_controller'\r\n\r\nimport Clock from '../component/clock'\r\nimport PauseSign from '../component/pause_sign'\r\nimport ScoreStorage from '../storage/score_storage'\r\n\r\nimport GameBoard from './game_board'\r\nimport GameArea from './game_area'\r\n\r\nimport SceneReset from '../scene/reset'\r\n\r\n// 游戏主体\r\nexport default class Game extends DrawingBoard {\r\n    constructor(callback) {\r\n        // 得到 id 为 area 的 canvas 作为画板\r\n        super('#area')\r\n        // 设置每个方块的大小\r\n        this.blockSize = this.canvas.width / 10\r\n        // 用来记录 setInterval 返回的循环事件 id,方便取消     \r\n        this.process = null\r\n        // 游戏初始完成之后执行的回调\r\n        this.callbackRun = callback\r\n\r\n        this.default()\r\n        this.getComponents()\r\n        this.setupEventController()\r\n        this.__start()\r\n    }\r\n    \r\n    default() {\r\n        this.fps = 45\r\n    }\r\n\r\n    getComponents() {\r\n        this.clock = Clock.instance()\r\n        this.storage = ScoreStorage.instance()\r\n        \r\n        // 分数板\r\n        this.scoreBoard = GameBoard.new('#point span', '#point p')\r\n        // 记录清除行数的面板\r\n        this.lineCountBoard = GameBoard.new('#lines span', '#lines p')\r\n        // 记录当前级别的面板\r\n        this.levelBoard = GameBoard.new('#level span')\r\n        // 暂停标志\r\n        this.pauseSign = PauseSign.instance()\r\n\r\n        this.area = GameArea.instance(this)\r\n        this.area.init()\r\n    }\r\n\r\n    setupEventController() {\r\n        this.eventCtrler = EventController.instance(this)\r\n    }\r\n\r\n    setPauseKeyCode(keyCode) {\r\n        this.eventCtrler.setPauseKeyCode(keyCode)\r\n    }\r\n\r\n    isPaused() {\r\n        return this.pauseSign.paused\r\n    }\r\n\r\n    pause() {\r\n        this.pauseSign.pause()\r\n    }\r\n\r\n    unpause() {\r\n        this.pauseSign.unpause()\r\n    }\r\n\r\n    // 注册相应键码的事件\r\n    registerAction(keyCode, controller) {\r\n        this.eventCtrler.registerController(keyCode, controller)\r\n    }\r\n\r\n    removeAllActions() {\r\n        this.eventCtrler.removeAllCallbacks()\r\n    }\r\n\r\n    setLineBoardTitle(str) {\r\n        this.lineCountBoard.setTitle(str)\r\n    }\r\n\r\n    setScoreBoardTitle(str) {\r\n        this.scoreBoard.setTitle(str)\r\n    }\r\n\r\n    getLines() {\r\n        return this.lineCountBoard.getNumber()\r\n    }\r\n\r\n    setLines(num) {\r\n        this.lineCountBoard.setNumber(num)\r\n    }\r\n\r\n    getLevel() {\r\n        return this.levelBoard.getNumber()\r\n    }\r\n\r\n    setLevel(num) {\r\n        this.levelBoard.setNumber(num)\r\n    }\r\n\r\n    getScore() {\r\n        return this.scoreBoard.getNumber()\r\n    }\r\n\r\n    setScore(num) {\r\n        this.scoreBoard.setNumber(num)\r\n    }\r\n\r\n    // 游戏场景替换\r\n    replaceScene(Scene, name) {\r\n        // cancel the registered functions\r\n        // this.removeAllActions()\r\n        this.sceneName = name\r\n        this.scene = Scene.instance(this)\r\n        // Scene.new will:\r\n        //      1st: create a singular instance at the first time or\r\n        //      2nd: just initialize the instance\r\n        this.eventCtrler.init()\r\n    }\r\n\r\n    drawBlock(x, y, color) {\r\n        super.drawBlock(x, y, this.blockSize, color)\r\n    }\r\n\r\n    draw() {\r\n        this.scene.draw()\r\n    }\r\n\r\n    update() {\r\n        this.scene.update()\r\n    }\r\n\r\n    runloop() {\r\n        //this.clear()\r\n        this.draw()\r\n        this.update()\r\n        this.process = setTimeout(() => {\r\n            this.runloop()\r\n        }, 1000 / this.fps);\r\n    }\r\n\r\n    run() {\r\n        this.process = setTimeout(() => {\r\n            this.runloop() \r\n        }, 1000 / this.fps);\r\n    }\r\n\r\n    __start() {\r\n        this.replaceScene(SceneReset)\r\n        this.callbackRun(this)\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/game.js","// 一个用于画出俄罗斯方块的画板(canvas)\r\nexport default class DrawingBoard {\r\n    constructor(selectors) {\r\n        this.canvas = document.querySelector(selectors)\r\n        this.ctx = this.canvas.getContext('2d')\r\n    }\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    drawBlock(x, y, bs, color) {\r\n        let gap = bs / 15\r\n        let space = bs / 10\r\n        let ctx = this.ctx\r\n        \r\n        ctx.fillStyle = color\r\n        // 画外框\r\n        let offsetX = bs * x + gap\r\n        let offsetY = bs * y + gap\r\n        let length = bs - 2 * gap        \r\n        ctx.fillRect(offsetX, offsetY, length, length)\r\n        \r\n        // 请空间隔\r\n        offsetX += gap\r\n        offsetY += gap\r\n        length -= 2 * gap\r\n        ctx.clearRect(offsetX, offsetY, length, length)\r\n\r\n        // 画正中间方块\r\n        length -= space * 2\r\n        ctx.fillRect(offsetX + space, offsetY + space,\r\n                     length, length)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/drawing_board.js","import EventUtil from '../utils/event_util'\r\nimport { keySettings, btnDownState, btnUpState } from '../const'\r\nimport { isMobile } from '../utils/function'\r\n\r\nexport default class EventController extends EventUtil {\r\n    constructor(game) {\r\n        super()\r\n        this.game = game\r\n        // pauseKeyCode : a special key to unauthorize the use of all the other keys\r\n        // 用于暂停所有事件的键码\r\n        this.pauseKeyCode = null\r\n        /* keyBinds     : will contain structure as follows 每个键码都会含有以下结构\r\n                {\r\n                    不同的场景会拥有不同的controller\r\n                    sceneControllers: {\r\n                        sceneName1 : controller1（ActionController实例）,\r\n                        sceneName2 : controller2,\r\n                        ...\r\n                    },\r\n                    component: 一个HTMLElement实例,\r\n                    actived: Boolean 表示component有没有被激活,用于防止多次触发,\r\n                }\r\n        */\r\n        this.keyBinds = {}\r\n        \r\n        // 处理设置好的 keySettings\r\n        this.processSettings()\r\n        this.setup()\r\n    }\r\n\r\n    setup() {\r\n        // 通过 actived 确保按住键盘不放时，绑定的事件只会触发一次\r\n        const down = (kc, controller) => {\r\n            if (!this.keyBinds[kc].actived) {\r\n                controller.down()\r\n                this.keyBinds[kc].actived = true\r\n            }\r\n        }\r\n\r\n        // 释放按键时触发controller的up函数\r\n        const up = (kc, controller) => {\r\n            this.keyBinds[kc].actived = false\r\n            controller.up()\r\n        }\r\n\r\n        // 通过id为button的HTMLElement对所有按钮元素进行事件代理\r\n        let buttons = document.querySelector('#button')\r\n        this.addKBHandler(window, 'keydown', btnDownState, down)\r\n        this.addKBHandler(window, 'keyup', btnUpState, up)\r\n\r\n        let ism = isMobile()\r\n        const start = ism ? 'touchstart' : 'mousedown'\r\n        const out = 'mouseout'\r\n        const end = ism ? 'touchend' : 'mouseup'\r\n        this.addMouseHandler(buttons, start, btnDownState, down)\r\n        this.addMouseHandler(buttons, end, btnUpState, up)\r\n        this.addMouseHandler(buttons, out, btnUpState, up)\r\n        // 当用户没有在按钮里面结束鼠标事件时，是不会触发 mouseup 事件的\r\n        // 只有用 mouseout 才能保证按键能正常结束，恢复原来的按键状况\r\n    }\r\n\r\n    init() {\r\n        for (let k in this.keyBinds) {\r\n            if (this.keyBinds[k]) {\r\n                this.keyBinds[k].actived = false\r\n            }\r\n        }\r\n    }\r\n\r\n    setPauseKeyCode(keycode) {\r\n        this.pauseKeyCode = keycode.toString()\r\n    }\r\n\r\n    // 处理设置好的 bindings 得到 keyCodes 对应的元素\r\n    processSettings() {\r\n        let settings = keySettings\r\n        const binds = {}\r\n        for (let key in settings) {\r\n            let { keyCode, sel } = settings[key]\r\n            binds[keyCode] = {\r\n                component: document.querySelector(sel),\r\n                sceneControllers: {},\r\n                actived: false,\r\n            }\r\n        }\r\n        this.keyBinds = binds\r\n    }\r\n\r\n    // 根据当前的 game.sceneName 来设置 controller (EventController 实例)\r\n    registerController(keyCode, controller) {\r\n        let binds = this.keyBinds[keyCode]\r\n        let sceneName = this.game.sceneName\r\n\r\n        if (!binds) {\r\n            binds = this.keyBinds[keyCode] = {\r\n                sceneControllers: {},\r\n                actived: false,\r\n            }\r\n        }\r\n        let sctrls = binds.sceneControllers\r\n        sctrls[sceneName] = controller\r\n    }\r\n\r\n    // 对 keybinds 里的对象添加键盘事件\r\n    addKBHandler(element, type, state, callback) {\r\n        let game = this.game\r\n        this.addHandler(element, type, (event) => {\r\n            this.keyboardHandler(event, state, callback)\r\n        })\r\n    }\r\n\r\n    keyboardHandler(event, state, callback) {\r\n        let kc = event.keyCode\r\n        let game = this.game\r\n        // 判断按下的键是否在绑定的键对中\r\n        if (kc in this.keyBinds) {\r\n            let bind = this.keyBinds[kc]\r\n            let paused = game.isPaused()\r\n            let cpn = bind.component\r\n            let ctrl = bind.sceneControllers[game.sceneName] // 得到当前场景对应的注册controller\r\n            if (cpn) {\r\n                // 更新组件的状态\r\n                cpn.className = state\r\n            }\r\n            if (!(paused && kc != this.pauseKeyCode) && ctrl) {\r\n                callback(kc, ctrl)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 对 keybinds 里的对象添加鼠标事件\r\n    addMouseHandler(element, type, state, callback) {\r\n        this.addHandler(window, type, (event) => {\r\n            this.mouseHandler(event, state, callback)\r\n        })\r\n    }\r\n\r\n    mouseHandler(event, state, callback) {\r\n        let tgt = this.getTarget(event)\r\n        let paused = this.game.isPaused()\r\n        // 遍历键值对，判断是否有相应的按钮被触发\r\n        for (let kc in this.keyBinds) {\r\n            let bind = this.keyBinds[kc]\r\n            let cpn = bind.component\r\n            let ctrl = bind.sceneControllers[this.game.sceneName]\r\n            if (cpn !== tgt) {\r\n                continue\r\n            }\r\n\r\n            cpn.className = state\r\n            if (!(paused && kc !== this.pauseKeyCode) && ctrl) {\r\n                return callback(kc, ctrl)\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/controller/event_controller.js","// 《JS高级程序设计》中的源码\r\nexport default class EventUtil {\r\n    constructor() {}\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    getEvent() {\r\n        return event ? event : window.event\r\n    }\r\n\r\n    getTarget(event) {\r\n        return event.target || event.srcElement\r\n    }\r\n\r\n    preventDefault(event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault()\r\n        } else {\r\n            event.returnValue = false\r\n        }\r\n    }\r\n\r\n    stopPropagation(event) {\r\n        if (event.stopPropagation) {\r\n            event.stopPropagation()\r\n        } else {\r\n            event.cancelBubble = true\r\n        }\r\n    }\r\n\r\n    addHandler(element, type, handler) {\r\n        if (element.addEventListener) {\r\n            element.addEventListener(type, handler)\r\n        } else if (element.attachEvent) {\r\n            element.attachEvent('on' + type, handler)\r\n        } else {\r\n            element['on' + type] = handler\r\n        }\r\n    }\r\n\r\n    removeHandler(element, type, handler) {\r\n        if (element.removeEventListener) {\r\n            element.removeEventListener(type, handler)\r\n        } else if (element.detachEvent) {\r\n            element.detachEvent('on' + type, handler);\r\n        } else {\r\n            element['on' + type] = handler\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/event_util.js","// 方块组合的类型\r\nconst blockType = [ \r\n                    [[0, 0], [1, 0], [2, 0], [3, 0]],\r\n                    [[0, 0], [0, 1], [1, 0], [1, 1]],\r\n                    [[0, 1], [1, 0], [1, 1], [2, 1]],\r\n                    [[0, 0], [0, 1], [1, 1], [2, 1]],\r\n                    [[0, 1], [1, 1], [2, 0], [2, 1]],\r\n                    [[0, 0], [1, 0], [1, 1], [2, 1]],\r\n                    [[0, 1], [1, 0], [1, 1], [2, 0]],\r\n]\r\n\r\n// 计分规则：消除行数与相应的分数\r\nconst clearPoints = [100, 300, 500, 800]\r\n\r\n// 游戏不同的级别相应的游戏速度；自动根据该数组判断最大级别\r\nconst speeds = [800, 650, 500, 400, 300, 200]\r\n\r\n// 级别相对应的方块组合的在移动时的延迟\r\nconst delays = [50, 60, 70, 80, 90, 100]\r\n\r\n// 代表每消除该数目的行数时，游戏会更新级别\r\nconst linesForEachLevel = 20\r\n\r\n// 代表在游戏在每次更新级别后方块落地的分数增量\r\nconst blockScoreIncrement = 2\r\n\r\n// 代表在随机生成方块时的概率\r\nconst generateBlockProb = 0.6\r\n\r\n// 能够生成的最多的初始行数目\r\nconst maxStartLines = 10\r\n\r\n// 按键设置：\r\n//     keyCode 为按键相应的键码\r\n//     sel 为按键在 HTML 中的 id ，用于做选择器\r\nconst keySettings = {\r\n    rotate: {\r\n        keyCode: 38,            // 方向键向上\r\n        sel: '#rotate_btn',\r\n    },\r\n    speedUp: {\r\n        keyCode: 40,            // 方向键向下\r\n        sel: '#down_btn',\r\n    },\r\n    left: {\r\n        keyCode: 37,            // 方向键向左\r\n        sel: '#left_btn',\r\n    },\r\n    right: {\r\n        keyCode: 39,            // 方向键向右\r\n        sel: '#right_btn',\r\n    },\r\n    drop: {\r\n        keyCode: 32,            // 空格\r\n        sel: '#drop_btn',\r\n    },\r\n    pause: {\r\n        keyCode: 80,            // P键\r\n        sel: '#pause_btn',\r\n    },\r\n    reset: {\r\n        keyCode: 82,            // R键\r\n        sel: '#reset_btn',\r\n    },\r\n}\r\n\r\n// 按钮按下，松开的类名\r\nconst btnDownState = 'pressed'\r\nconst btnUpState = ''\r\n\r\n// 暂停标志暂停，不暂停的类名\r\nconst pauseState = 'paused'\r\nconst unpauseState = 'unpaused'\r\n\r\n// 游戏时钟滴答的类名\r\nconst tikState = 'tik'\r\nconst tokState = 'tok'\r\n\r\nconst defaultColor = 'rgb(135, 147, 100)'    // 方块没有被占据时的颜色\r\nconst occupiedColor = 'rgb(0, 0, 0)'         // 方块被占据时的颜色\r\nconst indicateColor = 'rgb(180, 0, 0)'       // 高亮显示方块时的颜色\r\n\r\nexport {\r\n    blockType,\r\n    clearPoints,\r\n    speeds,\r\n    delays,\r\n    linesForEachLevel,\r\n    blockScoreIncrement,\r\n    generateBlockProb,\r\n    maxStartLines,\r\n    keySettings,\r\n    btnDownState,\r\n    btnUpState,\r\n    pauseState,\r\n    unpauseState,\r\n    tikState,\r\n    tokState,\r\n    defaultColor,\r\n    occupiedColor,\r\n    indicateColor,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/const.js","// 用于判断坐标组合组合是否会与游戏区域冲突\r\nvar collide = function (x, y, coors, area) {\r\n    // x 为方块组合的 x 轴的基准坐标\r\n    // y 为方块组合的 y 轴的基准坐标\r\n    // 坐标数组是已经以 x 坐标也就是 coors[0] 为优先排序过了\r\n    if (x + coors[0][0] < 0 || x + coors[3][0] >= area.column) {\r\n        return true\r\n    }\r\n\r\n    return coors.map((c) => {\r\n        // y + c[1] < 0 means the block is above the field\r\n        // so literally it dosen't collides\r\n        var coorY = y + c[1]\r\n        return !(coorY < 0 || !area.board[coorY][x + c[0]].occupied)\r\n    }).reduce((prev, cond) => {\r\n        return prev || cond\r\n    })\r\n}\r\n\r\n// 计算坐标组合的 x 坐标或 y 坐标的差\r\nvar coorDiff = function (coors, index) {\r\n    var array = coors.map(c => {\r\n        return c[index]\r\n    })\r\n\r\n    return Math.max(...array) - Math.min(...array)\r\n}\r\n\r\nvar coorCompare = function (coor1, coor2) {\r\n    return coor1[0] == coor2[0]\r\n        ? coor1[1] - coor2[1]\r\n        : coor1[0] - coor2[0]\r\n}\r\n\r\n// 判断是否为移动端\r\nvar isMobile = function () {\r\n    const ua = navigator.userAgent\r\n    const android = /Android (\\d+\\.\\d+)/.test(ua)\r\n    const iphone = ua.indexOf('iPhone') > -1\r\n    const ipod = ua.indexOf('iPod') > -1\r\n    const ipad = ua.indexOf('iPad') > -1\r\n    const nokiaN = ua.indexOf('NokiaN') > -1\r\n    return android || iphone || ipod || ipad || nokiaN\r\n}\r\n\r\nexport {\r\n    collide,\r\n    coorDiff,\r\n    coorCompare,\r\n    isMobile,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/function.js","import GameIndicator from '../game/game_indicator'\r\nimport GameBoard from '../game/game_board'\r\nimport { tikState, tokState } from '../const'\r\n\r\n// 用于表示游戏界面的时钟\r\nexport default class Clock {\r\n    constructor(game) {\r\n        this.game = game\r\n        this.setup()\r\n    }\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    // 初始化两个板子分别表示小时以及分钟，一个“滴答”的显示器\r\n    setup() {\r\n        this.hourBoard = GameBoard.new('#s_hour span')\r\n        this.minuteBoard = GameBoard.new('#s_minute span')\r\n        this.indicator = GameIndicator.new('#s_clock_indi')\r\n        \r\n        const now = new Date()\r\n        this.hours = now.getHours()\r\n        this.minutes = now.getMinutes()\r\n        this.seconds = now.getSeconds()\r\n\r\n        this.hourBoard.setNumber(this.hours)\r\n        this.minuteBoard.setNumber(this.minutes)\r\n\r\n        // 每秒更新一次\r\n        setInterval(() => {\r\n            this.update()\r\n        }, 1000)\r\n    }\r\n\r\n    update() {\r\n        if (++this.seconds == 60) {\r\n            this.seconds = 0\r\n            if (++this.minutes == 60) {\r\n                this.minutes = 0\r\n                if (++this.hours == 24) {\r\n                    this.hours = 0\r\n                }\r\n                this.hourBoard.setNumber(this.hours)\r\n            }\r\n            this.minuteBoard.setNumber(this.minutes)\r\n        }\r\n        \r\n        // 通过设置tikState，tokState两种状态相应的类名实现“滴答”的效果\r\n        const state = this.seconds % 2 == 0 ? tikState : tokState\r\n        this.indicator.setState(state)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/component/clock.js","// 用来管理 状态指示器\r\nexport default class GameIndicator {\r\n    constructor(sel) {\r\n        this.component = document.querySelector(sel)\r\n    }\r\n    \r\n    static new(...args) {\r\n        return new this(...args)\r\n    }\r\n\r\n    setState(state) {\r\n        this.component.className = state\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/game_indicator.js","export default class GameBoard {\r\n    // Board 用来管理跟数字有关的 HTMLElement 实例\r\n    constructor(eltsSel, titleSel) {\r\n        this.numElts = document.querySelectorAll(eltsSel)\r\n        if (titleSel) {\r\n            this.titleCpn = document.querySelector(titleSel)\r\n        }\r\n    }\r\n\r\n    static new(...args) {\r\n        return new this(...args)\r\n    }\r\n\r\n    setTitle(str) {\r\n        this.titleCpn.innerText = str\r\n    }\r\n\r\n    // 通过判断元素的样式来计算所显示的数字的大小\r\n    getNumber() {\r\n        let lastChar, eltClass, n, sum = 0\r\n        for (let i = this.numElts.length - 1; i >= 0; i--) {\r\n            eltClass = this.numElts[i].className\r\n            lastChar = eltClass == '' ? 0 : eltClass[eltClass.length-1]\r\n            n = parseInt(lastChar)\r\n            if (!isNaN(n)) {\r\n                sum = 10 * sum + n\r\n            }\r\n        }\r\n        return sum\r\n    }\r\n\r\n    // 通过改变元素的样式来改变显示的数字\r\n    setNumber(num) {\r\n        let r, length = this.numElts.length\r\n        let i = 0\r\n        for (; i < length && num > 0; i++) {\r\n            r = num % 10\r\n            this.setDigit(r, this.numElts[i])\r\n            num = (num - r) / 10\r\n        }\r\n\r\n        if (i == 0) {\r\n            this.setDigit(0, this.numElts[0])\r\n            i++\r\n        }\r\n        for (; i < length; i++) {\r\n            this.setDigit(null, this.numElts[i])\r\n        }\r\n    }\r\n\r\n    // digit 为 null 时清除状态\r\n    // 否则就设置与 digit 相对应的数字状态\r\n    setDigit(digit, elt) {\r\n        elt.className = digit == null ? '' : 'n' + digit\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/game_board.js","import GameIndicator from '../game/game_indicator'\r\nimport { pauseState, unpauseState } from '../const'\r\n\r\nexport default class PauseSign extends GameIndicator {\r\n    // 用来管理 暂停功能 以及 在游戏界面中的暂停标志\r\n    constructor() {\r\n        super('#s_psign')\r\n        this.process = null\r\n        this.paused = false\r\n        this.count = 0\r\n    }\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    pause() {\r\n        this.paused = true\r\n        // 暂停指示器闪烁\r\n        this.process = setInterval(() => {\r\n            this.count++ % 2 == 0 ? this.setState(pauseState) :\r\n                                    this.setState(unpauseState)\r\n        }, 1000 / 4)\r\n    }\r\n\r\n    unpause() {\r\n        this.paused = false\r\n        this.count = 0\r\n        this.setState(unpauseState)\r\n        clearInterval(this.process)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/component/pause_sign.js","const keys = {\r\n    lastRecordKey: \"tetris-last-record\",\r\n    maxRecordKey: \"tetris-max-record\",\r\n}\r\n\r\n// 用于对游戏分数存储的处理\r\nexport default class ScoreStorage {\r\n    constructor() {\r\n        this.storage = this.getLocalStorage()\r\n    }\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    getLocalStorage() {\r\n        if (typeof localStorage == 'object') {\r\n            return localStorage\r\n        } else if (typeof globalStorage == 'object') {\r\n            return globalStorage[location.host]\r\n        } else {\r\n            console.warn('Local storage not available. Your record will be forgot after leave')\r\n            return {}\r\n        }\r\n    }\r\n\r\n    getRecord(key) {\r\n        let num = parseInt(this.storage[key])\r\n        return isNaN(num) ? 0 : num\r\n    }\r\n\r\n    setRecord(key, val) {\r\n        this.storage[key] = val\r\n    }\r\n\r\n    getLastRecord() {\r\n        return this.getRecord(keys.lastRecordKey)\r\n    }\r\n\r\n    setLastRecord(num) {\r\n        this.setRecord(keys.lastRecordKey, num)\r\n    }\r\n\r\n    getMaxRecord() {\r\n        return this.getRecord(keys.maxRecordKey)\r\n    }\r\n\r\n    setMaxRecord(num) {\r\n        this.setRecord(keys.maxRecordKey, num)\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/storage/score_storage.js","import {\r\n    generateBlockProb,\r\n    defaultColor,\r\n    occupiedColor,\r\n    indicateColor,\r\n} from '../const'\r\n\r\n// 用于表示一个俄罗斯方块活动的区域\r\nexport default class GameArea {\r\n    constructor (game) {\r\n        this.game = game\r\n        this.board = []\r\n        this.scoring = false\r\n        this.process = null\r\n        this.count = 0\r\n        this.default()\r\n    }\r\n\r\n    static instance(game) {\r\n        this.i = this.i || new this(game)\r\n        return this.i\r\n    }\r\n\r\n    default() {\r\n        // 游戏区域的行数\r\n        this.row = 20\r\n        // 游戏区域的列数\r\n        this.column = 10\r\n        this.defaultColor = defaultColor\r\n        this.indicateColor = indicateColor\r\n        // 以下两项用于设置界面中在清除满行时的高亮显示\r\n        this.fullLinesEchoSpeed = 15    // board 中的满行显示的速度\r\n        this.fullLinesEchoTimes = 3     // 重复显示 board 中满行的次数\r\n    }\r\n\r\n    // 初始化board，board用于表示游戏界面的所有方块\r\n    // 初始时将所有方块的颜色设置为默认的颜色，occupied用于表示该方块时候已经被占据\r\n    init() {\r\n        let row = this.row\r\n        for (let i = 0; i < row; i++) {\r\n            this.board[i] = []\r\n            let line = this.board[i]\r\n            for (let j = 0; j < this.column; j++) {\r\n                line[j] = {\r\n                    color: this.defaultColor,\r\n                    occupied: false,\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 设置初始行\r\n    setPresetLines(num) {\r\n        this.generateRandomRows(num)\r\n    }\r\n\r\n    // 设置一整行的方块\r\n    setLine(lineIndex, color, occupied) {\r\n        let line = this.board[lineIndex]\r\n        for (let i = 0; i < this.column; i++) {\r\n            let block = line[i]\r\n            block.color = color\r\n            block.occupied = occupied\r\n        }\r\n    }\r\n\r\n    // 生成随机行\r\n    generateRandomRows(num) {\r\n        let lastIndex = this.row - num\r\n        for (let i = this.row - 1; i >= lastIndex; i--) {\r\n            let row = this.board[i]\r\n            for (let j = this.column - 1; j >= 0; j--) {\r\n                let block = row[j]\r\n                let generateBlock = Math.random() <= generateBlockProb\r\n                block.color = generateBlock ? occupiedColor : defaultColor\r\n                block.occupied = generateBlock\r\n            }\r\n\r\n            if (this.lineIsFull(row)) {\r\n                let index = Math.floor(Math.random() * 10)\r\n                let block = row[index]\r\n                block.color = defaultColor\r\n                block.occupied = false\r\n            }\r\n        }\r\n    }\r\n\r\n    lineIsFull(line) {\r\n        return line.map(b => {\r\n            return b.occupied\r\n        }).reduce((prev, cur) => {\r\n            return prev && cur\r\n        })\r\n    }\r\n\r\n    // 设置用于在清除满行的执行的对清除行数计分函数\r\n    setUpScoreRule(func) {\r\n        this.scoreFunc = function(rows) {\r\n            func && func(rows)\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        let game = this.game\r\n        for (let i = 0; i < this.row; i++) {\r\n            for (let j = 0; j < this.column; j++) {\r\n                game.drawBlock(j, i, this.board[i][j].color)\r\n            }\r\n        }\r\n    }\r\n\r\n    update() {\r\n        let lines = []\r\n        for (let i = 0; i < this.row; i++) {\r\n            if (this.lineIsFull(this.board[i])) {\r\n                lines.push(i)\r\n            }\r\n        }\r\n        \r\n        if (lines.length > 0) {\r\n            this.scoring = true\r\n            this.lines = lines\r\n            this.score()\r\n        }\r\n    }\r\n\r\n    score() {\r\n        this.scoring = true\r\n        this.process = setInterval(() => {\r\n            this.echoFullLines()\r\n        }, 1000 / this.fullLinesEchoSpeed)\r\n    }\r\n    \r\n    // 通过更新 full lines 的颜色来高亮显示 full lines\r\n    echoFullLines() {\r\n        // 游戏暂停时不更新\r\n        if (this.game.isPaused()) {\r\n            return\r\n        }\r\n\r\n        if (this.count++ > this.fullLinesEchoTimes * 2 - 1) {\r\n            this.count = 0\r\n            this.scoring = false\r\n            clearInterval(this.process)\r\n            this.clearFullLines()\r\n            return\r\n        }\r\n        let color = this.count % 2 == 0 ? this.defaultColor \r\n                                        : this.indicateColor\r\n        this.lines.map((li) => {\r\n            this.setLine(li, color, false)\r\n        })\r\n    }\r\n\r\n    // 在 echoFullLines() 中 full lines 的颜色已设置成\r\n    // defaultColor 因此直接将它移到数组顶部\r\n    clearFullLines() {\r\n        let ls = this.lines\r\n        ls.forEach((li) => {\r\n            let deleted = this.board.splice(li, 1)[0]\r\n            this.board.unshift(deleted)\r\n        })\r\n        this.scoreFunc(ls.length)\r\n        this.lines = null\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/game_area.js","import GameScene from '../../game/game_scene'\r\nimport SceneTitle from '../title'\r\nimport { occupiedColor, defaultColor } from '../../const'\r\n\r\nexport default class SceneReset extends GameScene {\r\n    constructor (game) {\r\n        super(game)\r\n    }\r\n\r\n    setup() {\r\n        this.pushElement(this.game.area)\r\n    }\r\n\r\n    init() {\r\n        this.index = 19\r\n        this.update = this.fillArea\r\n    }\r\n\r\n    fillArea() {\r\n        let area = this.game.area\r\n        area.setLine(this.index, occupiedColor, false)\r\n        if (--this.index < 0) {\r\n            this.index = 0\r\n            this.update = this.clearArea\r\n        }\r\n    }\r\n    \r\n    clearArea() {\r\n        let area = this.game.area\r\n        area.setLine(this.index, defaultColor, false)\r\n        if (++this.index == 20) {\r\n            this.restartGame()\r\n        }\r\n    }\r\n\r\n    restartGame() {\r\n        this.game.replaceScene(SceneTitle, 'title')\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/scene/reset/index.js","// 游戏场景的元类\r\nexport default class GameScene {\r\n    constructor (game) {\r\n        this.game = game\r\n        this.elements = []\r\n        this.setup()\r\n    }\r\n\r\n    static instance(game) {\r\n        this.i = this.i || new this(game)\r\n        this.i.init()\r\n        return this.i\r\n    }\r\n\r\n    setup() {}\r\n\r\n    init() {}\r\n\r\n    // 直接触发所有子元素的 draw\r\n    draw() {\r\n        for (var e of this.elements) {\r\n            e.draw()\r\n        }\r\n    }\r\n\r\n    update() {}\r\n\r\n    pushElement(elt) {\r\n        this.elements.push(elt)\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/game/game_scene.js","import GameScene from '../../game/game_scene'\r\nimport SceneMain from '../main'\r\nimport ActionController from '../../controller/action_controller'\r\nimport { speeds, maxStartLines, keySettings } from '../../const'\r\n\r\nexport default class SceneTitle extends GameScene {\r\n    constructor (game) {\r\n        super(game)\r\n        this.title = document.querySelector('#title')\r\n        // 页面标题闪烁的间隔\r\n        this.showGap = Math.floor(game.fps * 0.75)\r\n        this.scoreShowGap = game.fps * 2\r\n        this.count = 0\r\n        this.titleType = 1\r\n        this.startLevel = 1\r\n        this.maxLevel = speeds.length\r\n        this.startLines = 0\r\n        this.maxStartLines = maxStartLines\r\n    }\r\n\r\n    setup() {\r\n        let game = this.game\r\n        let that = this\r\n\r\n        let begin = 250\r\n        let interval = 150\r\n\r\n        let a = []\r\n        let b = [1, 2, ...a]\r\n        // 注册“降落”按键为开始游戏的按键\r\n        let dropCode = keySettings.drop.keyCode\r\n        game.registerAction(dropCode, ActionController.new({\r\n            key: 'drop',\r\n            begin,\r\n            interval,\r\n            callback() {\r\n                that.startGame()\r\n            },\r\n        }))\r\n\r\n        // 注册“向左”按键为降低初始难度\r\n        let leftCode = keySettings.left.keyCode\r\n        game.registerAction(leftCode, ActionController.new({\r\n            key: 'left',\r\n            begin,\r\n            interval,\r\n            callback() {\r\n                that.updateLevel(-1)\r\n            }\r\n        }))\r\n\r\n        // 注册“向右”按键为降低初始难度\r\n        let rightCode = keySettings.right.keyCode\r\n        game.registerAction(rightCode, ActionController.new({\r\n            key: 'right',\r\n            begin,\r\n            interval,\r\n            callback() {\r\n                that.updateLevel(1)\r\n            }\r\n        }))\r\n\r\n        // 注册“旋转”按键为增加初始行\r\n        let upCode = keySettings.rotate.keyCode\r\n        game.registerAction(upCode, ActionController.new({\r\n            key: 'up',\r\n            begin,\r\n            interval,\r\n            callback() {\r\n                that.updateLines(1)\r\n            },\r\n        }))\r\n\r\n        // 注册“加速”按键为减少初始行\r\n        let downCode = keySettings.speedUp.keyCode\r\n        game.registerAction(downCode, ActionController.new({\r\n            key: 'down',\r\n            begin,\r\n            interval,\r\n            callback() {\r\n                that.updateLines(-1)\r\n            },\r\n        }))\r\n    }\r\n\r\n    init() {\r\n        let game = this.game\r\n\r\n        game.setLevel(this.startLevel)\r\n        game.setLineBoardTitle('Start lines')\r\n        game.setLines(this.startLines)\r\n        game.area.draw()\r\n    }\r\n\r\n    startGame() {\r\n        let game =  this.game\r\n        game.replaceScene(SceneMain, 'main')\r\n        this.title.style.visibility = 'hidden'\r\n    }\r\n\r\n    update() {\r\n        let t = this.title\r\n        let game = this.game\r\n        // 反复显示标题\r\n        if (this.count % this.showGap == 0) {\r\n            let visible = t.style.visibility == 'visible'\r\n            t.style.visibility = visible ? 'hidden' : 'visible'\r\n        }\r\n\r\n        // 反复切换显示“上局游戏分数”，以及“最大游戏分数”\r\n        if (this.count % this.scoreShowGap == 0) {\r\n            let sb = game.scoreBoard\r\n            let s = game.storage\r\n            if (this.titleType) {\r\n                sb.setTitle('Max')\r\n                sb.setNumber(s.getMaxRecord())\r\n            } else {\r\n                sb.setTitle('Last Round')\r\n                sb.setNumber(s.getLastRecord())\r\n            }\r\n            this.titleType = !this.titleType\r\n        }\r\n        this.count++\r\n    }\r\n\r\n    updateLevel(num) {\r\n        let level = this.startLevel + num\r\n        if (level < 1) {\r\n            level += this.maxLevel\r\n        } else if (level > this.maxLevel) {\r\n            level -= this.maxLevel\r\n        }\r\n\r\n        this.game.setLevel(level)\r\n        this.startLevel = level\r\n    }\r\n\r\n    updateLines(num) {\r\n        let lines = this.startLines + num\r\n        if (lines < 0) {\r\n            lines += this.maxStartLines + 1\r\n        } else if (lines > this.maxStartLines) {\r\n            lines -= this.maxStartLines + 1\r\n        }\r\n\r\n        this.game.setLines(lines)\r\n        this.startLines = lines\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/scene/title/index.js","import GameScene from '../../game/game_scene'\r\nimport BlockComb from './blockcomb'\r\nimport SceneReset from '../reset/index'\r\nimport ActionController from '../../controller/action_controller'\r\nimport {\r\n    linesForEachLevel,\r\n    blockScoreIncrement,\r\n    keySettings,\r\n    clearPoints,\r\n} from '../../const'\r\n\r\nexport default class SceneMain extends GameScene {\r\n    constructor (game) {\r\n        super(game)\r\n        // 每组方块到达底部时得到的分数\r\n        this.eachBlockScore = 10\r\n        this.clearLines = 0\r\n    }\r\n\r\n    setup() {\r\n        let that = this\r\n        let game = this.game\r\n        let area = game.area\r\n\r\n        this.bc = BlockComb.instance(game)\r\n        this.pushElement(area)\r\n        this.pushElement(this.bc)\r\n       \r\n        // 设置 area 的计分规则\r\n        area.setUpScoreRule(rows => {\r\n            this.countScore(rows)\r\n        })\r\n\r\n        // 注册“左移”按键事件\r\n        let leftCode = keySettings.left.keyCode\r\n        game.registerAction(leftCode, ActionController.new({\r\n            key: 'left',\r\n            begin: 200,\r\n            interval: 100,\r\n            callback() {\r\n                that.bc.moveLeft()\r\n            },\r\n        }))\r\n\r\n        // 注册“右移”按键事件\r\n        let rightCode = keySettings.right.keyCode\r\n        game.registerAction(rightCode, ActionController.new({\r\n            key: 'right',\r\n            begin: 200,\r\n            interval: 100,\r\n            callback() {\r\n                that.bc.moveRight()\r\n            },\r\n        }))\r\n        \r\n        // 注册“加速”按键事件\r\n        let speedUpCode = keySettings.speedUp.keyCode\r\n        game.registerAction(speedUpCode, ActionController.new({\r\n            key: 'speedUp',\r\n            callback(clear) {\r\n                that.bc.retired ? clear() : that.bc.updateCD = -10\r\n            },\r\n        }))\r\n        \r\n        // 注册“旋转”按键事件\r\n        let rotateCode = keySettings.rotate.keyCode\r\n        game.registerAction(rotateCode, ActionController.new({\r\n            key: 'rotate',\r\n            once: true,\r\n            callback() {\r\n                that.bc.rotate()\r\n            },\r\n        }))\r\n\r\n        // 注册“降落”按键事件\r\n        let dropCode = keySettings.drop.keyCode\r\n        game.registerAction(dropCode, ActionController.new({\r\n            key: 'drop',\r\n            once: true,\r\n            callback() {\r\n                that.bc.drop()\r\n            },\r\n        }))\r\n\r\n        // 注册“重置”按键事件\r\n        let resetCode = keySettings.reset.keyCode\r\n        game.registerAction(resetCode, ActionController.new({\r\n            key: 'reset',\r\n            once: true,\r\n            callback() {\r\n                that.resetGame()\r\n            },\r\n        }))\r\n\r\n        // 注册“暂停”按键事件，并设置为game的 pause key\r\n        let pauseCode = keySettings.pause.keyCode\r\n        game.registerAction(pauseCode, ActionController.new({\r\n            key: 'pause',\r\n            once: true,\r\n            callback() {\r\n                game.isPaused() ? game.unpause() : game.pause()\r\n            },\r\n        }))\r\n        game.setPauseKeyCode(pauseCode)\r\n    }\r\n\r\n    init() {\r\n        let game = this.game\r\n\r\n        let level = this.game.getLevel()\r\n        this.bc.setLevel(level)\r\n        // 每次进入场景都行初始化 blockcomb\r\n        this.bc.init()\r\n\r\n        let presetLines = game.getLines()\r\n        game.area.setPresetLines(presetLines)\r\n\r\n        game.setLineBoardTitle('Cleans')\r\n        game.setLines(0)\r\n\r\n        game.setScoreBoardTitle('Points')\r\n        game.setScore(0)\r\n\r\n        // 初始化计分的有关信息\r\n        this.eachBlockScore = 10\r\n        this.clearLines = 0\r\n    }\r\n\r\n    addScore(score) {\r\n        let game = this.game\r\n        let sprev = game.getScore()\r\n        game.setScore(score + sprev)\r\n    }\r\n\r\n    countScore(rows) {\r\n        if (rows > 0) {\r\n            let game = this.game\r\n            let cprev = game.getLines()\r\n            let lineAmount = rows + cprev\r\n            game.setLines(lineAmount)\r\n\r\n            this.addScore(clearPoints[rows - 1])\r\n\r\n            this.clearLines += rows\r\n            if (this.clearLines >= linesForEachLevel) {\r\n                this.clearLines -= linesForEachLevel\r\n                this.bc.updateLevel()\r\n                this.eachBlockScore += blockScoreIncrement\r\n            }\r\n        }\r\n    }\r\n\r\n    resetGame() {\r\n        let game = this.game\r\n         \r\n        game.replaceScene(SceneReset, 'Reset')\r\n        let s = game.storage\r\n        let maxRecord = s.getMaxRecord()\r\n        let lastRecord = game.scoreBoard.getNumber()\r\n        if (lastRecord > maxRecord) {\r\n            s.setMaxRecord(lastRecord)\r\n        }\r\n        s.setLastRecord(lastRecord)\r\n    }\r\n\r\n    update() {\r\n        let bc = this.bc\r\n        let game = this.game\r\n        let area = game.area        \r\n\r\n        if (game.isPaused() || area.scoring) {\r\n            return\r\n        }\r\n        \r\n        if (bc.retired) {\r\n            if (bc.y < 0) {\r\n                this.resetGame()\r\n            } else {\r\n                bc.occupy()\r\n                this.addScore(this.eachBlockScore)                \r\n                area.update()\r\n                bc.init()\r\n            }\r\n        } else {\r\n            bc.update()\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/scene/main/index.js","import Preview from './preview'\r\nimport { collide, coorDiff, coorCompare } from '../../utils/function'\r\nimport { speeds, delays, occupiedColor, indicateColor } from '../../const'\r\n\r\n// 方块组合\r\nexport default class BlockComb {\r\n    constructor (game) {\r\n        this.game = game\r\n        this.maxLevel = speeds.length\r\n        this.default()\r\n        this.setup()\r\n    }\r\n\r\n    static instance(game) {\r\n        this.i = this.i || new this(game)\r\n\r\n        return this.i\r\n    }\r\n\r\n    default() {\r\n        // 整个方块组合的基准坐标\r\n        this.x = 0\r\n        this.y = 0\r\n        this.defaultColor = occupiedColor\r\n        // indicateColor 用于方块在到达底部的时候高亮显示的颜色\r\n        this.indicateColor = indicateColor\r\n        // blockcomb 下降的CD\r\n    }\r\n\r\n    setup() {\r\n        this.preview = Preview.instance(this.game)\r\n        this.preview.next()\r\n    }\r\n\r\n    // change the attrs of blockComb instead of creating a new one\r\n    // when the game need another block combination\r\n    init() {\r\n        let p = this.preview\r\n        this.coors = p.coors\r\n        // update preivew\r\n        p.next()\r\n        p.clear()\r\n        p.draw()\r\n\r\n        // x and y indicate block combination's place in board\r\n        this.x = 3\r\n        this.y = -coorDiff(this.coors, 1) - 1\r\n        this.color = this.defaultColor\r\n        this.updateCD = this.maxUpdateCD\r\n        this.retired = false    // retired 为真时重置 blockcomb\r\n    }\r\n\r\n    setLevel(level) {\r\n        this.level = level\r\n        let fps = this.game.fps\r\n\r\n        let speed = speeds[this.level - 1]\r\n        this.maxUpdateCD = Math.floor(fps * speed / 1000)\r\n        this.updateCD = this.maxUpdateCD\r\n\r\n        let delay = delays[this.level - 1]\r\n        this.delay = Math.floor(fps * delay / 1000)\r\n    }\r\n\r\n    updateLevel() {\r\n        if (this.level < this.maxLevel) {\r\n            let next = this.level + 1\r\n            this.setLevel(next)\r\n            this.game.setLevel(next)\r\n        }\r\n    }\r\n\r\n    move(offset) {\r\n        // 方块退休时，不能移动\r\n        if (this.retired) {\r\n            return\r\n        }\r\n        \r\n        let area = this.game.area\r\n        if (! collide(this.x+offset, this.y, this.coors, area)) {\r\n            this.x += offset\r\n            this.updateCD += this.delay\r\n        } else {\r\n            this.updateCD += Math.round(this.delay / 2)\r\n        }\r\n\r\n        if (this.updateCD > this.maxUpdateCD) {\r\n            this.updateCD = this.maxUpdateCD\r\n        }\r\n    }\r\n\r\n    moveLeft() {\r\n        this.move(-1)\r\n    }\r\n\r\n    moveRight() {\r\n        this.move(1)\r\n    }\r\n\r\n    rotate() {\r\n        // 方块退休时不能旋转\r\n        if (this.retired) {\r\n            return\r\n        }\r\n        // get rotated coordinates\r\n        let newCoors = this.rotateCoors(this.coors)\r\n        let area = this.game.area\r\n\r\n        // 得到所有可能的水平位移距离，通过让方块组合在贴墙时吗，改变其水平\r\n        // 基准坐标，使得能够贴墙旋转\r\n        let xDiff = coorDiff(newCoors, 0)\r\n        let offsets = this.getOptionalOffsets(xDiff)\r\n        for (let offset of offsets) {\r\n            if (! collide(this.x + offset, this.y, newCoors, area)) {\r\n                this.coors = newCoors\r\n                this.x += offset\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    rotateCoors(coors) {\r\n        // 旋转坐标\r\n        let newCoors = coors.map(c => [-c[1], c[0]])\r\n        // 对得到的新坐标排序，并且得到 x 坐标最小的坐标\r\n        let m = newCoors.sort(function (c1, c2) {\r\n            return c1[0] === c2[0] ? c1[1] - c2[1] : c1[0] - c2[0]\r\n        })[0]\r\n\r\n        // ensure the first one coor with 0 as x coordinate\r\n        // 确保第一个坐标的 x 坐标为0；长蛇状除外\r\n        let offsetX = m[0]\r\n        let offsetY = m[1]\r\n        let xDiff = coorDiff(coors, 0)\r\n        // 判断是否为长蛇状且旋转前处于横放的状态\r\n        if (xDiff === 3) {\r\n            offsetX -= 1\r\n            offsetY += 1\r\n        }\r\n        return newCoors.map(c => [c[0] - offsetX, c[1] - offsetY])\r\n    }\r\n\r\n    getOptionalOffsets(n) {\r\n        let offsets = [0]\r\n        for (let offset = 1; offset <= n; offset++) {\r\n            offsets.push(offset, -offset)\r\n        }\r\n        return offsets\r\n    }\r\n\r\n    // 方块组合直接降落到底部\r\n    drop() {\r\n        if (this.game.area.scoring) {\r\n            return  // area 在计分时不能 drop\r\n        }\r\n        while (!this.retired) {\r\n            this.updateY()\r\n        }\r\n    }\r\n\r\n    // 占据游戏画板\r\n    occupy() {\r\n        let board = this.game.area.board\r\n        for (let c of this.coors) {\r\n            try {\r\n                let block = board[this.y + c[1]][this.x + c[0]]\r\n                block.occupied = true\r\n                block.color = this.defaultColor\r\n            } catch(ex) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    retire() {\r\n        this.retired = true\r\n        this.color = this.indicateColor\r\n    }\r\n\r\n    // 判断方块组合是否被挡住\r\n    isBlocked() {\r\n        let area = this.game.area\r\n        for (let c of this.coors) {\r\n            try {\r\n                if (this.y + c[1] + 1 === area.row ||\r\n                    area.board[this.y + c[1] + 1][this.x + c[0]].occupied)\r\n                    return true\r\n            } catch (err) {\r\n                \r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    draw() {\r\n        let game = this.game\r\n        for (let c of this.coors) {\r\n            game.drawBlock(this.x + c[0], this.y + c[1], this.color)\r\n        }\r\n    }\r\n\r\n    updateY() {\r\n        this.isBlocked() ? this.retire() : this.y++\r\n    }\r\n\r\n    update() {\r\n        if (this.updateCD <= 0) {\r\n            this.updateCD = this.maxUpdateCD\r\n            this.updateY()\r\n        } else {\r\n            this.updateCD--\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/scene/main/blockcomb.js","import DrawingBoard from '../../game/drawing_board'\r\nimport { blockType } from '../../const'\r\nimport { occupiedColor } from '../../const'\r\nimport { coorDiff } from '../../utils/function'\r\n\r\n// preview for next blockcomb 方块组合的预览\r\n// 每次在主要界面需要一个新的方块组合时，就将目前缓存的方块组\r\n// 合提供给主界面，之后再更新方块组合；\r\n// 方块组合为一个数组，包含四个表示的坐标的数组\r\nexport default class Preview extends DrawingBoard {\r\n    constructor(game) {\r\n        super('#next canvas')\r\n        this.game = game\r\n        this.default()\r\n    }\r\n\r\n    // 更新 coors 供下一次 blockComb 重置使用\r\n    next() {\r\n        this.coors = this.randBlockType()\r\n        let diffX = coorDiff(this.coors, 0)\r\n        this.offsetX = diffX == 1 ? 1 : diffX == 2 ? 0.5 : 0\r\n        this.offsetY = coorDiff(this.coors, 1) == 0 ? 0.5 : 0\r\n    }\r\n\r\n    default() {\r\n        this.color = occupiedColor\r\n    }\r\n\r\n    drawBlock(x, y) {\r\n        super.drawBlock(x, y, this.game.blockSize, this.color)\r\n    }\r\n\r\n    randBlockType() {\r\n        let bt = blockType\r\n        return bt[Math.floor(Math.random() * bt.length)]    \r\n    }\r\n\r\n    draw() {\r\n        let coors = this.coors\r\n        \r\n        // draw blockComb preview\r\n        let offsetX = this.offsetX\r\n        let offsetY = this.offsetY\r\n        for (let c of coors) {\r\n            this.drawBlock(c[0] + offsetX, c[1] + offsetY)\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        let c = this.canvas\r\n        this.ctx.clearRect(0, 0, c.width, c.height)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/scene/main/preview.js","var events = {}\r\n\r\nexport default class ActionController {\r\n    constructor(options) {\r\n        this.key = options.key\r\n        this.callback = options.callback || (() => {})\r\n        this.begin = options.begin || 100\r\n        this.interval = options.interval || 50\r\n        this.once = options.once\r\n    }\r\n\r\n    static new(options) {\r\n        return new this(options)\r\n    }\r\n\r\n    // 键盘按下\r\n    down() {\r\n        this.clearAll()\r\n        this.callback(() => {\r\n            this.up()\r\n        })\r\n        if (this.once === true) {\r\n            return\r\n        }\r\n        this.start = this.begin\r\n        this.loop()\r\n    }\r\n\r\n    // 键盘松开\r\n    up() {\r\n        clearTimeout(events[this.key])\r\n        events[this.key] = null\r\n    }\r\n\r\n    loop() {\r\n        events[this.key] = setTimeout(() => {\r\n            this.start = null\r\n            this.loop()\r\n            this.callback(() => this.up())\r\n        }, this.start || this.interval)\r\n    }\r\n\r\n    // 清除所有触发的回调\r\n    clearAll() {\r\n        for (var k in events) {\r\n            var p = events[k]\r\n            if (p) {\r\n                clearTimeout(events[k])\r\n                events[k] = null\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/controller/action_controller.js","// 用于响应式调节游戏界面\r\nexport default class GameInterface {\r\n    constructor() {\r\n        this.root = document.querySelector('#root')\r\n        this.game = document.querySelector('#game')\r\n        this.button = document.querySelector('#button')\r\n        this.curW = 440 // width of game interface\r\n        this.curH = 677 // height of game interface\r\n        this.aspectRatio = this.curW / this.curH\r\n        this.process = null\r\n    }\r\n\r\n    static instance(...args) {\r\n        this.i = this.i || new this(...args)\r\n        return this.i\r\n    }\r\n\r\n    getBrowserInterfaceSize() {\r\n        let pageWidth = window.innerWidth;\r\n        let pageHeight = window.innerHeight;\r\n\r\n        if (typeof pageWidth != \"number\") {\r\n            //在标准模式下面\r\n            if (document.compatMode == \"CSS1Compat\" ) {\r\n                pageWidth = document.documentElement.clientWidth;\r\n                pageHeight = document.documentElement.clientHeight;\r\n            } else {\r\n                pageWidth = document.body.clientWidth;\r\n                pageHeight = window.body.clientHeight;\r\n            }\r\n        }\r\n    \r\n        return {\r\n            pageWidth: pageWidth,\r\n            pageHeight: pageHeight\r\n        }\r\n    }\r\n\r\n    resize() {\r\n        let r = this.root\r\n        let g = this.game\r\n        let b = this.button\r\n        let p = this.getBrowserInterfaceSize()\r\n        let w = p.pageWidth\r\n        let h = p.pageHeight\r\n\r\n        // 根据浏览器可用高度调整游戏界面\r\n        if (h != this.curH) {\r\n            let size = h / 677\r\n            let negSize = size - 1\r\n            let scale = `scale(${size})`\r\n            let nextW = 440 * size // 浏览器 height 对应的游戏所需最大宽度\r\n\r\n            // 不需要调整界面部件大小的情况\r\n            if ((h < this.curH && nextW < this.curW) || // 正在缩小\r\n                (h > this.curH || nextW > this.curW)) { // 正在扩大\r\n                r.style.width = `${nextW}px`\r\n                this.curW = nextW\r\n\r\n                let leftOffset = 220 * negSize\r\n                g.style.transform = `scale(${size})`\r\n                b.style.transform = `scale(${size})`\r\n                g.style.marginLeft = leftOffset + 50 + 'px'\r\n                b.style.marginLeft = leftOffset + 'px'\r\n            }\r\n\r\n            g.style.marginTop = 200 * negSize + 30 * size + 'px'\r\n            b.style.marginTop = 225 * negSize + 'px'\r\n\r\n            this.process = null            \r\n            this.curH = h\r\n        }\r\n\r\n        // 根据浏览器可用宽度调整游戏界面\r\n        if (w < this.curH * this.aspectRatio) {\r\n            r.style.width = '100%'\r\n\r\n            if (w == this.curW) {\r\n                return\r\n            }\r\n            \r\n            let size = w / 440\r\n            let negSize = size - 1\r\n            let scale = `scale(${size})`\r\n\r\n            g.style.transform = b.style.transform = scale\r\n            g.style.marginLeft = `${220 * negSize + 50}px`\r\n            b.style.marginLeft = `${220 * negSize}px`\r\n            this.curW = w\r\n        } else {\r\n            r.style.width = `${h * this.aspectRatio}px`\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/view/game_interface.js"],"sourceRoot":""}